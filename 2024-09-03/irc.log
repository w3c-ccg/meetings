[2024-09-03T16:00:01.322Z]	<Harrison_Tang>	present+
[2024-09-03T16:00:01.323Z]	<Gregory_Natran>	present+
[2024-09-03T16:00:03.049Z]	<Greg_Bernstein>	present+
[2024-09-03T16:00:09.785Z]	<Will_Abramson>	present+
[2024-09-03T16:00:17.687Z]	<Vanessa>	present+
[2024-09-03T16:00:35.972Z]	<Gregory_Natran>	present+
[2024-09-03T16:00:36.000Z]	<Greg_Bernstein>	present+
[2024-09-03T16:00:45.572Z]	<Jenn_Greene,_MCSM>	present+
[2024-09-03T16:01:22.077Z]	<Alberto_Leon>	present+
[2024-09-03T16:01:22.668Z]	<Hiroyuki_Sano>	present+
[2024-09-03T16:01:36.689Z]	<TallTed_//_Ted_Thibodeau_(he/him)_(OpenLinkSw.com)>	present+
[2024-09-03T16:01:49.788Z]	<James_Chartrand>	present+
[2024-09-03T16:01:52.557Z]	<Kimberly_Wilson_Linson>	present+
[2024-09-03T16:01:59.099Z]	<Geun-Hyung_Kim>	present+
[2024-09-03T16:02:04.509Z]	<Manu_Sporny>	present+
[2024-09-03T16:02:13.794Z]	<Anil_John_[US/DHS/SVIP]>	present+
[2024-09-03T16:02:20.082Z]	<Transcriber>	scribe+
[2024-09-03T16:02:20.082Z]	<Transcriber>	Meeting: weekly
[2024-09-03T16:02:34.152Z]	<Transcriber>	Harrison_Tang: Right you're good to go.
[2024-09-03T16:02:41.034Z]	<Jennie_M>	present+
[2024-09-03T16:03:55.811Z]	<Leo>	present+
[2024-09-03T16:04:22.709Z]	<Alex_H>	present+
[2024-09-03T16:04:36.084Z]	<Tim_Cappalli>	present+
[2024-09-03T16:04:44.505Z]	<David_Waite>	present+
[2024-09-03T16:04:58.268Z]	<Manu_Sporny>	https://github.com/w3c/tpac2024-breakouts/issues
[2024-09-03T16:05:05.614Z]	<Transcriber>	Manu_Sporny: Yep uh just a couple of quick ones uh the first 1 I'll put the link in um the worldwide web consortium's um technical planner is coming up um there are a number of us that are going uh in their breakout sessions uh already uh that have been uh raised here um of interest to this community.
[2024-09-03T16:05:12.702Z]	<Manu_Sporny>	https://github.com/w3c/tpac2024-breakouts/issues/38
[2024-09-03T16:05:13.587Z]	<Transcriber>	Manu_Sporny: Uh is a 1 around did method standardization um so I'll put that link in here.
[2024-09-03T16:05:21.303Z]	<Greg_Natran>	present+
[2024-09-03T16:05:34.452Z]	<Harrison_Tang>	We will not have the CCG meeting during that TPAC week (September 24)
[2024-09-03T16:05:49.876Z]	<Manu_Sporny>	https://github.com/w3c/tpac2024-breakouts/issues/37
[2024-09-03T16:06:02.772Z]	<Transcriber>	Manu_Sporny: And so that is uh going to involve uh Kim and Gabe uh and possibly myself speaking to some of the advancements that we've been making with other communities uh diff Iota um uh w3c this this community you know um on did method standardization um so there'll be an active discussion happening uh at TPAC about that there is also going to be a breakout session around uh the future of verifiable credentials um that includes um new features that a number of people in the community are uh planning uh we'll have an agenda up shortly um but you know expect a lot of discussion there.
[2024-09-03T16:06:30.437Z]	<Rashmi_Siravara>	present+
[2024-09-03T16:06:36.704Z]	<Transcriber>	Manu_Sporny: And then a couple other ones uh you know popped up that are of interest um 1 of them uh by uh Tim kapali which I think who just joined uh on um identity related web platform apis and harmonizing them um that has to do with like you know um the digital credential API and Web author and and uh fed CM API and that that sort of thing so um lots of cool stuff happening uh at TPAC this year um.
[2024-09-03T16:06:47.109Z]	<Transcriber>	Manu_Sporny: If you have a breakout session that you want to propose uh please get it on the agenda there uh the other uh real quick uh heads up is that um.
[2024-09-03T16:06:57.457Z]	<Tim_Cappalli>	There's also a general breakout session about Real World Identity on the Web as a followup from last year's session
[2024-09-03T16:07:05.831Z]	<steve_magennis>	present+
[2024-09-03T16:07:06.846Z]	<Manu_Sporny>	https://github.com/w3c/controller-document
[2024-09-03T16:07:22.234Z]	<Transcriber>	Manu_Sporny: The controller documents so this is a did document basically um uh had been moving fairly rapidly through the process but as of 2 weeks ago there have been a number of issues raised uh on it uh if you care about the documents or the future of them you might want to pay attention uh to the poll requests and the issues in that repository you'll see that they're like a 100 comments you know raised issues and PRS and whatever uh last week uh so just a heads up to keep an eye on that.
[2024-09-03T16:07:24.594Z]	<Transcriber>	Manu_Sporny: You know um.
[2024-09-03T16:07:30.053Z]	<Transcriber>	Manu_Sporny: Something to keep an eye on uh that's it for updates from me.
[2024-09-03T16:07:30.271Z]	<Jeff_O_-_HumanOS>	present+
[2024-09-03T16:08:26.213Z]	<Transcriber>	Greg_Bernstein: All right let's get screen sharing going again.
[2024-09-03T16:08:28.734Z]	<Transcriber>	Greg_Bernstein: Of the window.
[2024-09-03T16:08:41.270Z]	<Harrison_Tang>	present+
[2024-09-03T16:08:42.092Z]	<Vanessa>	present+
[2024-09-03T16:08:50.557Z]	<Will_Abramson>	present+
[2024-09-03T16:09:00.607Z]	<Alberto_Leon>	present+
[2024-09-03T16:09:09.379Z]	<Kimberly_Wilson_Linson>	present+
[2024-09-03T16:09:15.564Z]	<Hiroyuki_Sano>	present+
[2024-09-03T16:11:46.002Z]	<Transcriber>	scribe+
[2024-09-03T16:11:46.002Z]	<Transcriber>	Meeting: weekly
[2024-09-03T16:11:52.764Z]	<Transcriber>	Greg_Bernstein: Different figures or a different sizes credential attacks.
[2024-09-03T16:11:55.101Z]	<Jenn_Greene,_MCSM>	present+
[2024-09-03T16:12:01.395Z]	<Transcriber>	Greg_Bernstein: We have a 3-party model for credentials issuers holders and verifiers.
[2024-09-03T16:12:09.579Z]	<Transcriber>	Greg_Bernstein: So I was very confused after I talked gave my Susan them talk and somebody kept telling me you forgot to tell about how.
[2024-09-03T16:12:12.342Z]	<Transcriber>	Greg_Bernstein: Help prevent evil Alice and I go.
[2024-09-03T16:12:17.848Z]	<Transcriber>	Greg_Bernstein: I don't even know who evil Alice is okay.
[2024-09-03T16:12:20.341Z]	<Transcriber>	Greg_Bernstein: And we're going to get to that.
[2024-09-03T16:12:31.915Z]	<Transcriber>	Greg_Bernstein: They were thinking about in cryptography we have a and b Alice and Bob and then a 2-party model you have Alice and Bob and you can have evil Bob or good Bob and Alice.
[2024-09-03T16:12:48.906Z]	<Transcriber>	Greg_Bernstein: So if you hear somebody talking about evil Alice or evil Bob that's what they mean but this is I've got evil issues evil holders and evil verifiers okay as well as somebody out there who's going to be our credential Steeler.
[2024-09-03T16:12:59.923Z]	<Transcriber>	Greg_Bernstein: BBS what's the deal with that we talked about tracking.
[2024-09-03T16:13:13.856Z]	<Transcriber>	Greg_Bernstein: Okay and we talked about BBS producing unlined.
[2024-09-03T16:13:18.890Z]	<Transcriber>	Greg_Bernstein: If not done properly the verifiers.
[2024-09-03T16:13:23.355Z]	<Transcriber>	Greg_Bernstein: Can talk to each other and say Hey you know.
[2024-09-03T16:13:33.376Z]	<Transcriber>	Greg_Bernstein: I can identify the holder buy stuff in the signatures within the secured credential and so we can track them from sight to sight.
[2024-09-03T16:13:37.885Z]	<Transcriber>	Greg_Bernstein: That's what I mean by an evil verifier.
[2024-09-03T16:14:11.543Z]	<Greg_Natran>	present+
[2024-09-03T16:14:19.114Z]	<Transcriber>	Greg_Bernstein: Evil issuer meaning maybe the verifiers report back to the issuer without the holder's knowledge or consent there's a legitimate reasons to do these things right there's a legitimate reasons reasons to understand who's doing what out there but people should know when they're being tracked okay illegitimate reasons or you know we want to figure out how to sell you more something that you really don't need okay third model is this is the verifiers all report to some third party what holder has been Vision visiting them.
[2024-09-03T16:14:35.450Z]	<Transcriber>	Greg_Bernstein: 1 of the key things about BBS style signatures is the cryptographic information is on linkable okay so the cryptography is not the problem.
[2024-09-03T16:14:38.019Z]	<Transcriber>	Greg_Bernstein: Types of signatures.
[2024-09-03T16:14:45.914Z]	<Transcriber>	Greg_Bernstein: Schemes cryptography schemes those values are unique.
[2024-09-03T16:14:59.587Z]	<Transcriber>	Greg_Bernstein: Can be used for tracking whether that's an issue depends on the application but we are trying to be privacy preserving here now besides evil issuers and verify our tracking Around the Net.
[2024-09-03T16:15:03.424Z]	<Transcriber>	Greg_Bernstein: We have to worry about stolen credential use right.
[2024-09-03T16:15:03.688Z]	<Transcriber>	Greg_Bernstein:  so you.
[2024-09-03T16:15:30.534Z]	<Transcriber>	Greg_Bernstein: Using a verifiable credential what that the holder's consent or knowledge okay and how could that happen intercepting credentials between issuer and holder or holder and verifier or a data breach at the issue or holder or verifier write any of those things happens all the time we get those notices then there's another kind and this is the evil Alice case.
[2024-09-03T16:16:00.019Z]	<Transcriber>	Greg_Bernstein: So complicit credential abuse the illicit use of a credential with complicity of the credentials holder okay somebody other than the intended holder is using credentials with without with with the holder's knowledge right oh you want to see something from that website I already paid for it here use my thing and I'm gonna sell it off to all sorts of people okay so account sharing.
[2024-09-03T16:16:03.990Z]	<Transcriber>	Greg_Bernstein: Beyond contracted limits not me.
[2024-09-03T16:16:16.502Z]	<Transcriber>	Greg_Bernstein: Wearing my subscription to the times or the economists with my kids because we all just read it once in a while right you know that's within the contracted limits.
[2024-09-03T16:16:20.530Z]	<Transcriber>	Greg_Bernstein: Restrictions of Asians age limits okay.
[2024-09-03T16:16:31.478Z]	<Transcriber>	Greg_Bernstein: 1 of the things is unlink can make this abuse easier could you can't tell when somebody comes back if they're the same person right.
[2024-09-03T16:16:38.954Z]	<Transcriber>	Greg_Bernstein: So you could easily set this up so somebody could allow other people to use their credential in a unlink.
[2024-09-03T16:17:01.516Z]	<Transcriber>	Greg_Bernstein: Now last time we talked about these pseudonym things and it's like oh they keep you from being tracked but they allow the verifier to remember you so you can have services from that verifier blah blah and have a relationship with them but they also help mitigate this kind of credential abuse and was just on.
[2024-09-03T16:17:01.976Z]	<Transcriber>	Greg_Bernstein:  a email.
[2024-09-03T16:17:06.992Z]	<Transcriber>	Greg_Bernstein: Folks on blind BBS signatures and pseudonyms talking about.
[2024-09-03T16:17:14.033Z]	<Transcriber>	Greg_Bernstein: More examples of this and like for voting systems even.
[2024-09-03T16:17:17.478Z]	<Transcriber>	Greg_Bernstein: Saying we're using this for voting systems okay.
[2024-09-03T16:17:31.491Z]	<Transcriber>	Greg_Bernstein: So we have credential stealing credential abuse we have tracking what about forging credentials okay well the truth is this is extremely difficult this is what cryptographic papers and algorithms are all about.
[2024-09-03T16:17:32.725Z]	<Dave_Longley>	present+
[2024-09-03T16:17:39.473Z]	<Transcriber>	Greg_Bernstein: Okay if you could Forge a credential say an ecdsa or eddsa signature.
[2024-09-03T16:17:39.809Z]	<Transcriber>	Greg_Bernstein:  we would.
[2024-09-03T16:17:50.498Z]	<Transcriber>	Greg_Bernstein: Stop using it okay that's why we move on to different types of cryptography okay it is difficult if they are implemented correctly.
[2024-09-03T16:17:54.470Z]	<Transcriber>	Greg_Bernstein: Oh and the key is kept secret.
[2024-09-03T16:17:56.949Z]	<Transcriber>	Greg_Bernstein: So you may Wonder it's like.
[2024-09-03T16:17:57.282Z]	<Transcriber>	Greg_Bernstein:  why did.
[2024-09-03T16:18:03.007Z]	<Transcriber>	Greg_Bernstein: These guys always talk about these methods where they can figure out a couple extra bits of the key.
[2024-09-03T16:18:13.965Z]	<Transcriber>	Greg_Bernstein: You know all these weird things timing attacks and looking at the power used by the cryptographic processor anything that gets them a little more information of the key.
[2024-09-03T16:18:14.326Z]	<Transcriber>	Greg_Bernstein:  about the.
[2024-09-03T16:18:21.495Z]	<Transcriber>	Greg_Bernstein: They can try and guess the key easier than all those values so.
[2024-09-03T16:18:36.510Z]	<Transcriber>	Greg_Bernstein: People try and get around the cryptographic algorithms if they're implemented correctly if the keys kept secret you've got to go around it and that's where they concentrate a lot of their attacks.
[2024-09-03T16:18:42.993Z]	<Transcriber>	Greg_Bernstein: Through our job is to make sure we use the cryptography properly okay.
[2024-09-03T16:18:56.019Z]	<Transcriber>	Greg_Bernstein: So let's look at some mechanisms questions I'm not looking at the chat because I'm sharing my screen so if there's questions somebody will let me know so mitigating.
[2024-09-03T16:19:15.489Z]	<Transcriber>	Greg_Bernstein: The first set of these is kind of like it's being stolen between the holder and the verifier right so it's got intercepted or somebody hacked the holder okay and these would be normally talked about as replay attacks.
[2024-09-03T16:19:18.843Z]	<Transcriber>	Greg_Bernstein:  we've got some.
[2024-09-03T16:19:23.565Z]	<Transcriber>	Greg_Bernstein: Ms generally in v and verifiable credentials to deal with these.
[2024-09-03T16:19:23.920Z]	<Transcriber>	Greg_Bernstein:  there's some.
[2024-09-03T16:19:37.033Z]	<Transcriber>	Greg_Bernstein: So in the VC data integrity and the model there's a challenge value and then in data Integrity when you verify your proof you're supposed to do something with that value so let's look at that flow.
[2024-09-03T16:19:45.496Z]	<Transcriber>	Greg_Bernstein: And you'll notice the flow is kind of long and complicated the verifier comes up with a fresh challenge value.
[2024-09-03T16:19:49.975Z]	<Transcriber>	Greg_Bernstein: For the holder to use now the holder doesn't.
[2024-09-03T16:19:52.487Z]	<Transcriber>	Greg_Bernstein: Can't do anything with that.
[2024-09-03T16:20:13.035Z]	<Transcriber>	Greg_Bernstein: Because they don't issue the credential they have to take that challenge value send it over to the issuer the issuer secures the VC including a proof with the check covering the challenge value okay the holder then sends that back to the verifier and we can tell we don't like this flow why.
[2024-09-03T16:20:22.465Z]	<Transcriber>	Greg_Bernstein: Because we have to go back to the issuer at some time to get this done right so it's it's not it's okay but.
[2024-09-03T16:20:25.482Z]	<Transcriber>	Greg_Bernstein: Not what we think about okay.
[2024-09-03T16:20:31.014Z]	<Transcriber>	Greg_Bernstein: So holder has to get issued to involved in providing a fresh challenge value.
[2024-09-03T16:20:38.478Z]	<Transcriber>	Greg_Bernstein: Let's look at a different cryptographic scheme and its support.
[2024-09-03T16:20:47.505Z]	<Transcriber>	Greg_Bernstein: Okay nbbs there's something known as the presentation header we'll get we'll remind folks about this in a sec okay.
[2024-09-03T16:21:04.009Z]	<Transcriber>	Greg_Bernstein: In the BBS ietf draft it talks about presentation header particularly for using this in the verifiable credential w3c spec we give you hooks to use the presentation header.
[2024-09-03T16:21:10.477Z]	<Transcriber>	Greg_Bernstein: What is the flow look like oops not yet sorry I'm gonna remind you.
[2024-09-03T16:21:14.976Z]	<Transcriber>	Greg_Bernstein: Is a 3 3 party model.
[2024-09-03T16:21:27.494Z]	<Transcriber>	Greg_Bernstein: Okay they'll use the term sir uh prover and verifier we use the terms issuer holder and verifier okay.
[2024-09-03T16:21:52.549Z]	<Transcriber>	Greg_Bernstein: So issuer to holder the issuer uses the sine function covering multiple messages right we take our verifiable credential we do our Json LD Pro processing end up with a bunch of messages statements okay sign that send the signature and the messages over to the holder the holder can verify that if they wanted to okay.
[2024-09-03T16:21:57.539Z]	<Transcriber>	Greg_Bernstein: But the holder uses a separate procedure called proof jet.
[2024-09-03T16:22:04.975Z]	<Transcriber>	Greg_Bernstein: No secret key of the issuer is involved it just has the private key public key sorry.
[2024-09-03T16:22:08.976Z]	<Transcriber>	Greg_Bernstein: Has the signature involved it's got a header.
[2024-09-03T16:22:13.978Z]	<Transcriber>	Greg_Bernstein: The Header information is information must that must be shared by all parties.
[2024-09-03T16:22:18.806Z]	<econnell>	present+
[2024-09-03T16:22:26.475Z]	<Transcriber>	Greg_Bernstein: We make use of that with verifiable credentials in the DI spec for BBS we put things like mandatory reveal information in that header.
[2024-09-03T16:22:32.012Z]	<Transcriber>	Greg_Bernstein: However this presentation header thingy.
[2024-09-03T16:22:37.965Z]	<Transcriber>	Greg_Bernstein: Is only shared between the holder and the verifier.
[2024-09-03T16:22:42.498Z]	<Transcriber>	Greg_Bernstein: In addition it's secured okay.
[2024-09-03T16:22:45.970Z]	<Transcriber>	Greg_Bernstein: So we have a model that looks like this.
[2024-09-03T16:22:46.555Z]	<Transcriber>	Greg_Bernstein:  the issue.
[2024-09-03T16:22:51.976Z]	<Transcriber>	Greg_Bernstein: Uses BBS to sign a VC sends it to the holder.
[2024-09-03T16:23:07.064Z]	<Transcriber>	Greg_Bernstein: Verifier says sends information like a challenge but we don't call it a challenge it doesn't have to be incorporated in the VC directly over to the holder containing what they want to see in the presentation header.
[2024-09-03T16:23:09.498Z]	<Transcriber>	Greg_Bernstein: Okay the holder.
[2024-09-03T16:23:15.469Z]	<Transcriber>	Greg_Bernstein: Creates another secure VC what we call a derived proof.
[2024-09-03T16:23:36.539Z]	<Transcriber>	Greg_Bernstein: Okay different languages based on w3c versus okay we have a base proof we put into the sign BC a drive proof in the secured VC we put in the presentation header okay that is secured with the BBS algorithm and the verifier can verify it so.
[2024-09-03T16:23:45.479Z]	<Transcriber>	Greg_Bernstein: BBS has a built-in anti-reflux to the issuer to do that okay.
[2024-09-03T16:23:48.471Z]	<Transcriber>	Greg_Bernstein: I used to know question.
[2024-09-03T16:24:02.257Z]	<Joe_Andrieu>	present+
[2024-09-03T16:24:34.988Z]	<Transcriber>	Greg_Bernstein: Okay so um yeah I don't bring up presentation here so the holder would then.
[2024-09-03T16:24:39.978Z]	<Transcriber>	Greg_Bernstein: Come up with a presentation and sign the presentation.
[2024-09-03T16:24:44.526Z]	<Transcriber>	Greg_Bernstein: That yeah so then we have to have the holders.
[2024-09-03T16:24:52.002Z]	<Transcriber>	Greg_Bernstein: Public key known to the verifier and we'll have the issuers public key known to the verifier.
[2024-09-03T16:25:00.998Z]	<Transcriber>	Greg_Bernstein: And we're going to hit something like that in a second so yeah that's a completely legit way to do it too um.
[2024-09-03T16:25:16.648Z]	<Transcriber>	Greg_Bernstein: I just we're going to see something like that in a second and where we have both issuer and holders having public private key Pairs and we'll use that for a little bit more security so.
[2024-09-03T16:25:24.076Z]	<Transcriber>	Greg_Bernstein: So I think maybe I don't give a fair shift to challenge being used here um.
[2024-09-03T16:25:24.703Z]	<Transcriber>	Greg_Bernstein: Let's take a.
[2024-09-03T16:25:33.004Z]	<Transcriber>	Greg_Bernstein: Look at the next level of security where we bind and we'll see that once the holder has a okay.
[2024-09-03T16:25:53.538Z]	<Transcriber>	Greg_Bernstein: That leads us to the next issue okay well what if somebody what if we want to make sure that it's really coming from the holder.
[2024-09-03T16:26:09.247Z]	<Transcriber>	Greg_Bernstein: Okay how do we bind the credential to a holder we've been hearing more demands for this okay the ud wallet people of God and what we talked about how far they want to go with it okay.
[2024-09-03T16:26:18.214Z]	<Transcriber>	Greg_Bernstein: How does this work the holder is going to have a public private key pair.
[2024-09-03T16:26:25.231Z]	<Transcriber>	Greg_Bernstein: Creating digital signatures such as ecdsa type signatures something we use with credentials.
[2024-09-03T16:26:35.294Z]	<Transcriber>	Greg_Bernstein: The public key from the holder the holder's public key is sent to the issuer for inclusion in the credential that is sent.
[2024-09-03T16:26:41.230Z]	<Transcriber>	Greg_Bernstein: Why does the holder need to get their public key back.
[2024-09-03T16:26:49.713Z]	<Transcriber>	Greg_Bernstein: Oh when requesting the credential the verifier also includes a message acting as a test.
[2024-09-03T16:26:54.997Z]	<Transcriber>	Greg_Bernstein: Older signs this message with their private key oh.
[2024-09-03T16:27:02.764Z]	<Transcriber>	Greg_Bernstein: It includes it with the credentials sent to the verifier are you keeping all this in your head we're going to see a diagram in a second.
[2024-09-03T16:27:06.718Z]	<Transcriber>	Greg_Bernstein: Okay so we have 2 different sets of public private keys.
[2024-09-03T16:27:17.782Z]	<Transcriber>	Greg_Bernstein: The holders public key gets sent to the issuer and incorporated into credential the verifier is going to send a test message or.
[2024-09-03T16:27:22.230Z]	<Transcriber>	Greg_Bernstein: Nuts or what challenge or whatever you want to call it.
[2024-09-03T16:27:39.251Z]	<Transcriber>	Greg_Bernstein: To the holder to sign to verify or then validates the signature on the test message with the holder's public key that was contained in the VC and verifies it with this credential with the issuer's public key ah let's look at the diagram.
[2024-09-03T16:27:42.106Z]	<Transcriber>	Greg_Bernstein:  the whole.
[2024-09-03T16:27:42.652Z]	<Transcriber>	Greg_Bernstein: Folder has a.
[2024-09-03T16:27:49.735Z]	<Transcriber>	Greg_Bernstein: The issuer has a public key the holder sends their public key to the issuer.
[2024-09-03T16:27:58.247Z]	<Transcriber>	Greg_Bernstein: The issuer signs the VC with their secret key but also includes a copy.
[2024-09-03T16:28:01.765Z]	<Transcriber>	Greg_Bernstein: Which is signed over of the holders public key.
[2024-09-03T16:28:12.759Z]	<Transcriber>	Greg_Bernstein: So they're saying look I'm issuing this credential to the holder and the holder I've verified somehow that the holder this is the holder's public key.
[2024-09-03T16:28:16.753Z]	<Transcriber>	Greg_Bernstein: Only the holder should have the secret key.
[2024-09-03T16:28:20.731Z]	<Transcriber>	Greg_Bernstein: Okay they don't send the secret key to the issuer.
[2024-09-03T16:28:28.302Z]	<Transcriber>	Greg_Bernstein: Okay the verifier can send a test message whatever they like can also be used for anti-reflux.
[2024-09-03T16:28:32.224Z]	<Transcriber>	Greg_Bernstein: So what is the holder do.
[2024-09-03T16:28:36.229Z]	<Transcriber>	Greg_Bernstein: A forward on the secured VC.
[2024-09-03T16:28:44.282Z]	<Transcriber>	Greg_Bernstein: Which the issuer remember signed over their public key and they're going to sign this test message.
[2024-09-03T16:28:53.239Z]	<Transcriber>	Greg_Bernstein: They got from the verifier the verifier then does 2 things they verify this credential.
[2024-09-03T16:29:02.754Z]	<Transcriber>	Greg_Bernstein: Issuers public key they make sure it's from the issuer okay.
[2024-09-03T16:29:03.101Z]	<Transcriber>	Greg_Bernstein:  from the.
[2024-09-03T16:29:10.797Z]	<Transcriber>	Greg_Bernstein: Out what the issuer said is the holders public key and they verify.
[2024-09-03T16:29:16.232Z]	<Transcriber>	Greg_Bernstein: The sign test message with that public key meaning only the holder.
[2024-09-03T16:29:16.553Z]	<Transcriber>	Greg_Bernstein:  who had.
[2024-09-03T16:29:25.752Z]	<Transcriber>	Greg_Bernstein: Has its secret key corresponding to the public key could have created and signed the signed the test message so the verified 2 things.
[2024-09-03T16:29:34.210Z]	<Transcriber>	Greg_Bernstein: Okay they verified the credential and they verified that only the credential.
[2024-09-03T16:29:34.519Z]	<Transcriber>	Greg_Bernstein:  could have.
[2024-09-03T16:30:02.366Z]	<Transcriber>	Greg_Bernstein: This combination of things could have come from the holder it's only the holder knows the secret key so this is strong holder binding okay the issuer issued it to the holder knowing that the holder had this public key and only the holder has the secret key hopefully right if they lose the secret key or if somebody else gets the secret key all bets are off okay.
[2024-09-03T16:30:12.256Z]	<Transcriber>	Greg_Bernstein: So this so we see Auntie replay we see a nice flow here notice if you go to another verifier.
[2024-09-03T16:30:29.286Z]	<Transcriber>	Greg_Bernstein: Okay the holder doesn't have to go back to the issuer all they have to do is get a different test message from this other verifier send them the secure VC and another sign test message so we don't have that icky flow like we saw before okay.
[2024-09-03T16:30:36.250Z]	<Transcriber>	Greg_Bernstein: Pros prevents anyone from using the credential without the holder's consent.
[2024-09-03T16:30:42.298Z]	<Transcriber>	Greg_Bernstein: And it's as strong as the ability of the holder to keep their private key Secret.
[2024-09-03T16:31:03.128Z]	<Joe>	present+
[2024-09-03T16:31:06.284Z]	<Transcriber>	Greg_Bernstein: Or to make sure there's no fraud in this over here between the holes or the issuer right right if somebody's trying to impersonate the holder and get the issuers that's another process right remember the cryptography when implemented well is strong very strong so people are going to do whatever they can to get around it.
[2024-09-03T16:31:13.771Z]	<Transcriber>	Greg_Bernstein: Where the rest of us come in right we're not cryptographers but we have to make sure how we handle the rest of these things.
[2024-09-03T16:31:19.230Z]	<Transcriber>	Greg_Bernstein: Or we know about the cryptography we have to handle the rest of these things in a secure way.
[2024-09-03T16:31:20.808Z]	<Transcriber>	Greg_Bernstein: Look at the con.
[2024-09-03T16:31:27.256Z]	<Transcriber>	Greg_Bernstein: The holders public key and a VC is a unique identifier for the holder.
[2024-09-03T16:31:30.744Z]	<Transcriber>	Greg_Bernstein: And allows tracking on every credential use.
[2024-09-03T16:31:44.274Z]	<Transcriber>	Greg_Bernstein: This public key value is unique it better be because it corresponds to the holder secret key if 2 people have the same public key that means they have the same secret key essentially.
[2024-09-03T16:31:47.230Z]	<Transcriber>	Greg_Bernstein: Are good enough okay.
[2024-09-03T16:31:52.738Z]	<Transcriber>	Greg_Bernstein: This public key holder binding flow.
[2024-09-03T16:31:54.746Z]	<Transcriber>	Greg_Bernstein: Doesn't stop the tracking.
[2024-09-03T16:31:59.730Z]	<Transcriber>	Greg_Bernstein: Very secure okay.
[2024-09-03T16:32:25.796Z]	<Transcriber>	Greg_Bernstein: People are going to try and get around things they're going to try and steal the private keys so you want to put your private key someplace really safe so no 1 can steal it you only want to use it in a real leafe place so nobody can look at it and learn it okay and this is why people are talking about trusted execution environments and.
[2024-09-03T16:33:15.915Z]	<Transcriber>	Greg_Bernstein: Trusted platform modules and the like associated with wallets and things like that okay there's these things called TPMS if you've got a modern laptop PC or whatever most likely you have 1 in it windows I think starting in Windows 11 or 10 required 1 this diagram shows an older block diagram of a TPM okay but what do they have in them they've got random number generators they have algorithms they Implement algorithms TPM 2.0 includes crypto elliptic curve cryptography that kind of stuff we have for ecdsa eddsa for credentials because those are more efficient especially as far as key sizes.
[2024-09-03T16:33:24.234Z]	<Transcriber>	Greg_Bernstein: Sometimes you'll hear these called hardware-based roots of trust.
[2024-09-03T16:33:38.825Z]	<Transcriber>	Greg_Bernstein: People Hardware manufacturers make chips for everything from laptops to iot devices that can do these kind of things okay.
[2024-09-03T16:33:49.284Z]	<Transcriber>	Greg_Bernstein: So they'll Generate random not secure random numbers they can generate key pairs they can do all sorts of good things what we care about is.
[2024-09-03T16:34:00.284Z]	<Transcriber>	Greg_Bernstein: Repair generation remember that public and private key pair okay only the public key ever comes out private Keys never would leave the secure element.
[2024-09-03T16:34:04.784Z]	<Transcriber>	Greg_Bernstein: Now in addition to doing this in Hardware you can also do this in a.
[2024-09-03T16:34:12.759Z]	<Transcriber>	Greg_Bernstein: Secure piece of software that's that trusted execution or secure element things.
[2024-09-03T16:34:13.102Z]	<Transcriber>	Greg_Bernstein:  so how.
[2024-09-03T16:34:31.290Z]	<Transcriber>	Greg_Bernstein: And such like that how you achieve that okay but private Keys Never Leave the secure element unless they are encrypted that's 1 trick that they figured out with TPMS it's like oh people might have a lot of product private key pairs.
[2024-09-03T16:34:37.267Z]	<Transcriber>	Greg_Bernstein: We can export them right out of the TPM as long as they are.
[2024-09-03T16:34:51.825Z]	<Transcriber>	Greg_Bernstein: Okay they call that key wrapping so we have private so we have that production we have key pair generation protecting the private keys if you need to have a lot of them and you can sign things.
[2024-09-03T16:34:58.744Z]	<Transcriber>	Greg_Bernstein: People get very excited we'll have this in this root of trust okay.
[2024-09-03T16:35:03.271Z]	<Transcriber>	Greg_Bernstein: But remember once you got something really nice and secure.
[2024-09-03T16:35:10.267Z]	<Transcriber>	Greg_Bernstein: Somebody's going to go around it they're going to subvert it they're going to take over it and things like that okay.
[2024-09-03T16:35:18.366Z]	<Transcriber>	Greg_Bernstein: Can't extract the private Keys that's what they were good for but they'll go around try and go around it anyway possible.
[2024-09-03T16:35:32.276Z]	<Transcriber>	Greg_Bernstein: We get in all sorts of issues about how do apps get Fair access so somebody else can make a wallet and things like that is it going to be limited just to the right now getting control or being able to use those.
[2024-09-03T16:35:32.724Z]	<Transcriber>	Greg_Bernstein:  secure element.
[2024-09-03T16:35:38.271Z]	<Transcriber>	Greg_Bernstein: Um quite limited the hardware can be slow to evolve okay.
[2024-09-03T16:35:46.775Z]	<Transcriber>	Greg_Bernstein: Current ECU support in these things is limited to specific curves and specific signing algorithms.
[2024-09-03T16:35:54.834Z]	<Transcriber>	Greg_Bernstein: People are pushing to modernize these things and such but remember we.
[2024-09-03T16:36:00.246Z]	<Transcriber>	Greg_Bernstein: Do we always need this level of security can we always get it.
[2024-09-03T16:36:09.396Z]	<Transcriber>	Greg_Bernstein: Right now um you know should we halt all Innovation just because we don't have a hardware root of trust no.
[2024-09-03T16:36:15.313Z]	<Transcriber>	Greg_Bernstein: I've been on many conversations lately with uh.
[2024-09-03T16:36:23.771Z]	<Transcriber>	Greg_Bernstein: And they say oh yeah we need a secure platform to do our discussions and such like that we'll use signal.
[2024-09-03T16:36:46.997Z]	<Transcriber>	Greg_Bernstein: That's done in software but all the algorithms are open source all the cryptographers have been able to see how signal implements their protocols and such like that and everybody says that's good and Signal came out first and then other people came out and did those things later alright WhatsApp Google something or other messaging uses signals organs.
[2024-09-03T16:36:51.251Z]	<Transcriber>	Greg_Bernstein: Okay so how are we going to make this anonymous.
[2024-09-03T16:36:54.749Z]	<Transcriber>	Greg_Bernstein: What we're going to use BBS okay.
[2024-09-03T16:37:02.771Z]	<Transcriber>	Greg_Bernstein: Now we had this public key holder binding and we got some cool Concepts from it okay.
[2024-09-03T16:37:09.722Z]	<Transcriber>	Greg_Bernstein: Giving them verifiers public key allows the holder.
[2024-09-03T16:37:14.865Z]	<Joe>	present+
[2024-09-03T16:37:17.261Z]	<Transcriber>	Greg_Bernstein: Giving the verifier the holders public key allows the holder to prove that they know a secret right.
[2024-09-03T16:37:24.276Z]	<Transcriber>	Greg_Bernstein: I'm going to sign whatever you give to me okay and you can use my public key.
[2024-09-03T16:37:29.769Z]	<Transcriber>	Greg_Bernstein: To verify that I knew the secret key that corresponded it by checking the signature.
[2024-09-03T16:37:43.777Z]	<Transcriber>	Greg_Bernstein: Okay so I'm able to kind of prove something to the verifier they know this thing though that identifies me that's a downside the public key is bound to the private key.
[2024-09-03T16:37:49.792Z]	<Transcriber>	Greg_Bernstein: But but public key is linked to the secret key and doesn't hide the holder.
[2024-09-03T16:37:56.229Z]	<Transcriber>	Greg_Bernstein: We learned about something like this last time with pseudonyms.
[2024-09-03T16:37:56.533Z]	<Transcriber>	Greg_Bernstein:  this is.
[2024-09-03T16:38:03.247Z]	<Transcriber>	Greg_Bernstein: With cryptographers kind of call a commitment or a commitment scheme.
[2024-09-03T16:38:04.144Z]	<Transcriber>	Greg_Bernstein: Wanted to come.
[2024-09-03T16:38:12.266Z]	<Transcriber>	Greg_Bernstein: Chosen secret value while keeping it hidden from others with the ability to reveal it later.
[2024-09-03T16:38:22.812Z]	<Transcriber>	Greg_Bernstein: Commitment schemes are designed so that a party cannot change the value or statement they have after they've committed it to it committed to it.
[2024-09-03T16:38:28.313Z]	<Transcriber>	Greg_Bernstein: There's 2 main properties cryptographic properties binding.
[2024-09-03T16:38:37.788Z]	<Transcriber>	Greg_Bernstein: The commitment is generated Alice can only open it to a single message no changing the message after the commitment has been made.
[2024-09-03T16:38:41.307Z]	<Transcriber>	Greg_Bernstein: Hiding this is what we don't get.
[2024-09-03T16:38:51.305Z]	<Transcriber>	Greg_Bernstein: With the public key-based hold your binding the commitment strength C should reveal no information about the committed message.
[2024-09-03T16:38:59.942Z]	<Transcriber>	Greg_Bernstein: Okay even if the message set is under control of the adversary for us we don't want to be tracked ah.
[2024-09-03T16:39:05.332Z]	<Transcriber>	Greg_Bernstein: Now last time we said there's a number of ways you can come up with commitment schemes.
[2024-09-03T16:39:25.423Z]	<Transcriber>	Greg_Bernstein: Let M be the message being committed or value choose a random R take a hash of the concatenation of the message with the brand of value R hash functions cryptographic hash functions you can't reverse them okay you can't figure out the M from.
[2024-09-03T16:39:32.830Z]	<Transcriber>	Greg_Bernstein: The value of the commitment and the R value if you could you'd be a Bitcoin billionaire right.
[2024-09-03T16:39:49.344Z]	<Transcriber>	Greg_Bernstein: Because that's what a lot of those Bitcoin proof of works are all checking hash function values and wasting a tremendous amount of energy and natural resources okay verification on reveal of n by checking.
[2024-09-03T16:39:51.396Z]	<Transcriber>	Greg_Bernstein: So you can.
[2024-09-03T16:39:56.300Z]	<Transcriber>	Greg_Bernstein: There's another type of commitment that's fairly famous.
[2024-09-03T16:40:07.377Z]	<Transcriber>	Greg_Bernstein: Uses these things called groups Prime order groups and they're based on the difficulty of the discrete logarithm problem.
[2024-09-03T16:40:17.340Z]	<Transcriber>	Greg_Bernstein: Which is the same as ecdsa eddsa and BBs is tied to the discrete logarithm problem right.
[2024-09-03T16:40:21.815Z]	<Transcriber>	Greg_Bernstein: If you didn't know so how these work.
[2024-09-03T16:40:44.890Z]	<Transcriber>	Greg_Bernstein: Let X be the number the message to be committed let R be a another random number we call that the blinding or hiding factor into the commute the compute the commitment is simply as raising this number g i called a generator to the power x and H multiplied by H to the power r.
[2024-09-03T16:40:52.800Z]	<Transcriber>	Greg_Bernstein: Now you're going but if we reveal the secret wait.
[2024-09-03T16:40:53.139Z]	<Transcriber>	Greg_Bernstein:  what could.
[2024-09-03T16:40:58.817Z]	<Transcriber>	Greg_Bernstein: Is committing to this thing and hiding it with his commitment if we have to reveal it.
[2024-09-03T16:41:04.820Z]	<Transcriber>	Greg_Bernstein: That's where we get to the modern stuff.
[2024-09-03T16:41:11.346Z]	<Transcriber>	Greg_Bernstein: Where we get to things called zero knowledge proofs because what we're not ever going to do is reveal.
[2024-09-03T16:41:14.809Z]	<Transcriber>	Greg_Bernstein: The value X.
[2024-09-03T16:41:18.793Z]	<Transcriber>	Greg_Bernstein: We're going to do is we're going to prove that we know these values.
[2024-09-03T16:41:22.817Z]	<Transcriber>	Greg_Bernstein: We're going to prove it and what's called zero knowledge.
[2024-09-03T16:41:39.363Z]	<Transcriber>	Greg_Bernstein: Okay so you've heard about these things so let's talk about them a bit so you'll know the jargon okay we're not going to do the proofs like we went through a little bit last time I put the slides in but I know we're going to run out of time.
[2024-09-03T16:41:46.327Z]	<Transcriber>	Greg_Bernstein: And we want to have some time for questions so zero knowledge proofs.
[2024-09-03T16:41:55.317Z]	<Transcriber>	Greg_Bernstein: Okay they have to satisfy 3 things it's a procedure that goes on between approver and a verifier.
[2024-09-03T16:42:04.317Z]	<Transcriber>	Greg_Bernstein: Hence the terminology in the BBS draft where the you have a signer an approver and a verifier.
[2024-09-03T16:42:07.829Z]	<Transcriber>	Greg_Bernstein: PBS is a zero knowledge proof.
[2024-09-03T16:42:08.142Z]	<Transcriber>	Greg_Bernstein:  between the.
[2024-09-03T16:42:11.326Z]	<Transcriber>	Greg_Bernstein: Approver and the verifier to prove that they know.
[2024-09-03T16:42:11.673Z]	<Transcriber>	Greg_Bernstein:  all the.
[2024-09-03T16:42:30.360Z]	<Transcriber>	Greg_Bernstein: And the signature on the message and the signature corresponds to those sets of messages okay so they're not just saying I know the signature but I know the signature corresponds to this particular set of messages and I know the messages Okay so.
[2024-09-03T16:42:35.332Z]	<Transcriber>	Greg_Bernstein: A procedure that goes on between these 2 folks it's complete.
[2024-09-03T16:42:35.631Z]	<Transcriber>	Greg_Bernstein:  if you.
[2024-09-03T16:42:38.814Z]	<Transcriber>	Greg_Bernstein: Run the protocol okay.
[2024-09-03T16:42:46.813Z]	<Transcriber>	Greg_Bernstein: And the statements drew the verifier will accept it okay so if you truly know the signature.
[2024-09-03T16:42:51.333Z]	<Transcriber>	Greg_Bernstein: Truly know the messages and they all correspond to each other.
[2024-09-03T16:42:55.803Z]	<Transcriber>	Greg_Bernstein: The verifier will accept it.
[2024-09-03T16:42:57.473Z]	<Joe>	present+
[2024-09-03T16:43:04.832Z]	<Transcriber>	Greg_Bernstein: They use the term sound meaning your argument to the sound the to say if the statement is false the verifier follows the protocol.
[2024-09-03T16:43:13.327Z]	<Transcriber>	Greg_Bernstein: Verify it cannot be convinced okay you can't fool me the prover can't prove to you okay.
[2024-09-03T16:43:18.310Z]	<Transcriber>	Greg_Bernstein: The protocol if they don't really know the information okay.
[2024-09-03T16:43:18.623Z]	<Transcriber>	Greg_Bernstein:  so you can't.
[2024-09-03T16:43:28.831Z]	<Transcriber>	Greg_Bernstein: That's that you can't fool me property complete means you'll accept it if it's really true property and zero knowledge means.
[2024-09-03T16:43:36.353Z]	<Transcriber>	Greg_Bernstein: You're not going to learn anything extra other than the fact the statement is true I know the secret value.
[2024-09-03T16:43:50.407Z]	<Transcriber>	Greg_Bernstein: Okay there is you don't need to have this public key you this extra stuff okay to accept my proof of it I'm going to give you this proof of it but you're not going to learn anything other than I know the value.
[2024-09-03T16:44:03.347Z]	<Transcriber>	Greg_Bernstein: In case when you read some of these things and you hear about ZK snarks and ZK Starks and such like that.
[2024-09-03T16:44:06.817Z]	<Transcriber>	Greg_Bernstein: To be technical.
[2024-09-03T16:44:32.385Z]	<Transcriber>	Greg_Bernstein: Proofs need to be sound remember you can't fool me even against computationally unbounded provers so the provers can have all the computer power in the world that's the formal definition of proof where an argument only needs to re preserve the you can't fool me property against limited computation okay.
[2024-09-03T16:44:32.752Z]	<Transcriber>	Greg_Bernstein:  so that.
[2024-09-03T16:44:35.866Z]	<Transcriber>	Greg_Bernstein: Technical term hence.
[2024-09-03T16:44:54.409Z]	<Transcriber>	Greg_Bernstein: If you go and look up things zero knowledge you'll hear people talking about zero knowledge proofs in general okay but when they get try and get more technical you'll see acronyms like ZK snark zero knowledge.
[2024-09-03T16:45:22.487Z]	<Transcriber>	Greg_Bernstein: Succinct non-interactive those things succinct meaning short non or n or active meaning we've compressed this into a a single round we don't have to go back and forth and back and forth argument for knowledge argument is the more correct technical term but we just use proof to talk about these things in general okay took me a while I was like why are these guys talk about arguments well the whole thing is called a proof.
[2024-09-03T16:45:25.485Z]	<Transcriber>	Greg_Bernstein: Technical thing okay.
[2024-09-03T16:45:34.891Z]	<Transcriber>	Greg_Bernstein: So just to summarize the BBS proof provided by a holder through a verifier is a zero knowledge proof.
[2024-09-03T16:45:41.772Z]	<Transcriber>	Greg_Bernstein: BBS has been using this stuff and has been around this type okay.
[2024-09-03T16:45:52.492Z]	<Transcriber>	Greg_Bernstein: For quite a while there's a lot of current work still going on on zks because they're trying to prove more General things.
[2024-09-03T16:46:06.675Z]	<Transcriber>	Greg_Bernstein: Ckps have a certain form proving very specific types of statements okay that's why BBS though gets away with very small proofs.
[2024-09-03T16:46:15.125Z]	<Transcriber>	Greg_Bernstein: Very small signatures and very efficient compared to others UK Pro techniques.
[2024-09-03T16:46:26.607Z]	<Transcriber>	Greg_Bernstein: Now with BBs each proof generated uses a different set of cryptographic random numbers and hence different proofs cannot be linked to each other.
[2024-09-03T16:46:33.455Z]	<Transcriber>	Greg_Bernstein: Okay that's where we get that even that good on trackability on linkability okay.
[2024-09-03T16:46:40.971Z]	<Transcriber>	Greg_Bernstein: Here's repeat of what I said with the references to tell you where to see these things and.
[2024-09-03T16:46:50.436Z]	<Transcriber>	Greg_Bernstein: Folks we're getting some interest with these things and standardizing this set of proof techniques okay.
[2024-09-03T16:46:53.957Z]	<Transcriber>	Greg_Bernstein: So just to let you know that's.
[2024-09-03T16:46:54.340Z]	<Transcriber>	Greg_Bernstein:  some current.
[2024-09-03T16:47:09.372Z]	<Transcriber>	Greg_Bernstein: At ZK the ZK proof folks are talking about taking some of that and bringing that over the ietf we're talking with them to see how to incorporate more General proofs of things into things now.
[2024-09-03T16:47:15.090Z]	<Transcriber>	Greg_Bernstein: You may be using a bunch of this stuff already but.
[2024-09-03T16:47:15.658Z]	<Transcriber>	Greg_Bernstein:  an example.
[2024-09-03T16:47:20.190Z]	<Transcriber>	Greg_Bernstein: Proof of the.
[2024-09-03T16:47:33.252Z]	<Transcriber>	Greg_Bernstein: Okay so here's a little bit about signal private messaging okay not to be confused with other things that okay.
[2024-09-03T16:47:43.162Z]	<Transcriber>	Greg_Bernstein: Once again they're algorithms okay and there's security Protocols are used in WhatsApp Google messages and other things okay.
[2024-09-03T16:47:53.250Z]	<Transcriber>	Greg_Bernstein: In february this year they announced usernames okay so you don't need to share your phone number okay.
[2024-09-03T16:47:59.155Z]	<Transcriber>	Greg_Bernstein: I just discovered as I've been working on pseudonym stuff.
[2024-09-03T16:48:08.542Z]	<Transcriber>	Greg_Bernstein: This nice article that explains their use of usernames along with the zero knowledge proofs based on these discrete log things.
[2024-09-03T16:48:14.465Z]	<Transcriber>	Greg_Bernstein: Are also kept secret from signal.
[2024-09-03T16:48:18.561Z]	<Transcriber>	Greg_Bernstein: Does something similar with.
[2024-09-03T16:48:27.069Z]	<Transcriber>	Greg_Bernstein: With uh if you set up groups like we have a family chat and Signal we had all these members they keep that information.
[2024-09-03T16:48:27.458Z]	<Transcriber>	Greg_Bernstein:  nice and.
[2024-09-03T16:48:39.681Z]	<Transcriber>	Greg_Bernstein: Okay people can't see who's talking to who the same way okay as you can on other social media platforms because it's not a social media platform it's a private messaging app.
[2024-09-03T16:48:46.108Z]	<Transcriber>	Greg_Bernstein: So the usernames consists of a nickname and a number okay.
[2024-09-03T16:48:52.049Z]	<Transcriber>	Greg_Bernstein: Like win Cadet 1 1 17 okay that's not really my.
[2024-09-03T16:49:10.980Z]	<Transcriber>	Greg_Bernstein: Username but I just wanted to have an example they commute a computer commitment kind of just like that uh flavor of what we call the Patterson commitment okay they take a hash kind of randomizes things.
[2024-09-03T16:49:36.549Z]	<Transcriber>	Greg_Bernstein: Times it by a group element this is actually something called scalar multiplication okay they take the nickname turn it into a number multip do a scalar multiplication with a group element and finally they take that number and do the scalar raised G3 to a power they sent this information okay this is sent by a signal to Signal by the owner of the username.
[2024-09-03T16:49:58.508Z]	<Transcriber>	Greg_Bernstein: Okay signal never sees the username only the commitment to the username okay to connect with another user you must know their username they had to tell you it you can't get it from signal okay and you don't even tell it to Signal what you do is compute the commitment along with a proof.
[2024-09-03T16:50:04.881Z]	<Transcriber>	Greg_Bernstein: A zero knowledge proof that you know the username.
[2024-09-03T16:50:09.341Z]	<Transcriber>	Greg_Bernstein: We saw this before.
[2024-09-03T16:50:09.890Z]	<Transcriber>	Greg_Bernstein:  oh yeah.
[2024-09-03T16:50:10.538Z]	<Transcriber>	Greg_Bernstein: Yeah when we.
[2024-09-03T16:50:18.974Z]	<Transcriber>	Greg_Bernstein: We said the prover or us the holder will have a secret value.
[2024-09-03T16:50:22.962Z]	<Transcriber>	Greg_Bernstein: Okay they'll compute a commitment.
[2024-09-03T16:50:40.511Z]	<Transcriber>	Greg_Bernstein: To that value along with 1 of these zero knowledge proofs of knowledge okay and they'll keep some information to themselves about how they blinded it that blinding Factor they can send that over.
[2024-09-03T16:50:42.491Z]	<Transcriber>	Greg_Bernstein: To the issuer.
[2024-09-03T16:50:47.965Z]	<Transcriber>	Greg_Bernstein: Who can then check to make sure using the proof procedure.
[2024-09-03T16:50:56.445Z]	<Transcriber>	Greg_Bernstein: These guys really know this value without feeling the value and we use this for what we called.
[2024-09-03T16:51:02.956Z]	<Transcriber>	Greg_Bernstein: Hidden paid pseudonyms it was used to generate pseudonyms without anybody knowing.
[2024-09-03T16:51:06.534Z]	<Transcriber>	Greg_Bernstein: Anything about the pseudonyms no tracking possible.
[2024-09-03T16:51:15.988Z]	<Transcriber>	Greg_Bernstein: Except to verify I'll be able to know you and see you again but they can't correlate you across other verifiers so we did this stuff kind of before.
[2024-09-03T16:51:20.470Z]	<Transcriber>	Greg_Bernstein: Okay this is what signal does okay.
[2024-09-03T16:51:30.200Z]	<Transcriber>	Greg_Bernstein: So we talked about this is like a Patterson commitment it just says a lot more instead of just 1 secret value it broke it up into multiple secret values.
[2024-09-03T16:51:40.978Z]	<Transcriber>	Greg_Bernstein: Okay we're not going to review the interactive proofs or the proof of correctness we did now what do we do with this stuff.
[2024-09-03T16:51:53.992Z]	<Transcriber>	Greg_Bernstein: There's something known as a blind signature you can ask somebody to sign something for you without them actually knowing it okay it's a cryptographic thing okay.
[2024-09-03T16:52:16.484Z]	<Transcriber>	Greg_Bernstein: TBS can support blind signatures we have a draft okay on how to do it okay and how does it work you make a commitment the holder makes a commitment they provide a commitment a proof a zero knowledge proof that they actually know the value ship both the commitment and the proof.
[2024-09-03T16:52:16.860Z]	<Transcriber>	Greg_Bernstein:  of the.
[2024-09-03T16:52:17.883Z]	<Transcriber>	Greg_Bernstein: For the commit.
[2024-09-03T16:52:27.486Z]	<Transcriber>	Greg_Bernstein: To the issuer the issuer can verify the proof and use that commitment straight and sign that commitment okay.
[2024-09-03T16:52:31.459Z]	<Transcriber>	Greg_Bernstein: So what is this signature API look like.
[2024-09-03T16:52:39.476Z]	<Transcriber>	Greg_Bernstein: Looks like just what I said the issuer has their secret key their public key they get a commitment with proof.
[2024-09-03T16:52:39.756Z]	<Transcriber>	Greg_Bernstein:  from the.
[2024-09-03T16:52:43.467Z]	<Transcriber>	Greg_Bernstein: Holder and that everything looks kind of the same.
[2024-09-03T16:52:45.951Z]	<Transcriber>	Greg_Bernstein: The interesting thing is.
[2024-09-03T16:52:50.444Z]	<Transcriber>	Greg_Bernstein: When we do blind proof generation the holder.
[2024-09-03T16:53:09.538Z]	<Transcriber>	Greg_Bernstein: Can I have a whole set of committed messages this is General blind signatures okay we're just going to have 1 okay and they don't have to reveal them or they can reveal them okay so this is a more General protocol than we we need for holder binding.
[2024-09-03T16:53:42.573Z]	<Transcriber>	Greg_Bernstein: Okay scary formula scary formula but I just wanted to show you here we do all these multiplications and this is done in the right order okay we have the commitment formula okay we have a value in the group we have a secret proverb blind the blinded we have a bunch of committed messages from the holder not to be confused with the issuer messages we're just talking about 1 message the secret.
[2024-09-03T16:53:45.467Z]	<Transcriber>	Greg_Bernstein: For hold your binding but there could be others.
[2024-09-03T16:53:48.134Z]	<Transcriber>	Greg_Bernstein: For use in pseudonyms.
[2024-09-03T16:53:51.455Z]	<Transcriber>	Greg_Bernstein: The signing formula.
[2024-09-03T16:54:10.043Z]	<Transcriber>	Greg_Bernstein: 4 BBS signatures takes place in 2 main pieces this is down right in the guts of how BBs works it has some stuff in it to help you randomization and important things cryptographically but the core part is taking another set of these generators.
[2024-09-03T16:54:14.485Z]	<Transcriber>	Greg_Bernstein: And combining them with all the messages from the issuer.
[2024-09-03T16:54:14.899Z]	<Transcriber>	Greg_Bernstein:  and I.
[2024-09-03T16:54:21.952Z]	<Transcriber>	Greg_Bernstein: I took these from 2 different specs so they're not differentiated sorry but.
[2024-09-03T16:54:28.487Z]	<Transcriber>	Greg_Bernstein: It adds in the commitment oh so it all kind of looks the same.
[2024-09-03T16:54:43.094Z]	<Transcriber>	Greg_Bernstein: Then we do the final signing formula this is why BBS works so well with blind signatures with very little change the cryptography is the same we're just have this extra procedure of the commitment commitment with proof.
[2024-09-03T16:54:50.994Z]	<Transcriber>	Greg_Bernstein: What is our flow look like here okay Anonymous holder binding flow.
[2024-09-03T16:54:53.456Z]	<Transcriber>	Greg_Bernstein: The holder generates the secret.
[2024-09-03T16:54:55.473Z]	<Transcriber>	Greg_Bernstein: They keep it secret.
[2024-09-03T16:54:59.695Z]	<Transcriber>	Greg_Bernstein: They generate a commitment to the secret and they generate a.
[2024-09-03T16:55:14.011Z]	<Transcriber>	Greg_Bernstein: Proof a zero knowledge proof that they actually know that secret and corresponding to with how the commitments made okay the issuer issues a blind a BBS signature.
[2024-09-03T16:55:22.478Z]	<Transcriber>	Greg_Bernstein: BBS using blind BB BBS over the messages the credential Plus.
[2024-09-03T16:55:26.475Z]	<Transcriber>	Greg_Bernstein: This the hidden secret okay.
[2024-09-03T16:55:29.508Z]	<Transcriber>	Greg_Bernstein: The holder needs to use their.
[2024-09-03T16:55:43.492Z]	<Transcriber>	Greg_Bernstein: Secret to generate a BBS proof they never reveal their secret they don't that's just a message that's never revealed to the verifier okay so we have the same properties.
[2024-09-03T16:55:45.972Z]	<Transcriber>	Greg_Bernstein: We saw with.
[2024-09-03T16:55:49.967Z]	<Transcriber>	Greg_Bernstein: Public key holder binding except.
[2024-09-03T16:55:57.010Z]	<Transcriber>	Greg_Bernstein: We stay Anonymous or we we keep our unlink ability okay.
[2024-09-03T16:56:04.542Z]	<Transcriber>	Greg_Bernstein: Anonymous we may want to throw in Sudan HMS on top of this is 1 of the things we discovered after looking at this stuff more.
[2024-09-03T16:56:08.480Z]	<Transcriber>	Greg_Bernstein: Now ah we're gotten short on time.
[2024-09-03T16:56:13.997Z]	<Transcriber>	Greg_Bernstein: But that's about where we're at Okay so.
[2024-09-03T16:56:25.532Z]	<Transcriber>	Greg_Bernstein: You may be thinking wait if people know how to do zero knowledge proofs and they're trying to do zero knowledge proofs.
[2024-09-03T16:56:34.488Z]	<Transcriber>	Greg_Bernstein: For more General type of complicated functions for smart contracts and all sorts of things might they try and do this.
[2024-09-03T16:56:43.540Z]	<Transcriber>	Greg_Bernstein: Existing signatures especially since right now roots of trusts only currently support ecdsa type signatures.
[2024-09-03T16:56:52.966Z]	<Transcriber>	Greg_Bernstein: Yeah this could make an existing signature on linkable okay but this isn't easy.
[2024-09-03T16:56:59.098Z]	<Transcriber>	Greg_Bernstein: Right now it might take about a gig or a couple hundred Meg.
[2024-09-03T16:57:05.537Z]	<Transcriber>	Greg_Bernstein: Space in about half an hour on a full laptop I've tried some of these computations.
[2024-09-03T16:57:15.508Z]	<Transcriber>	Greg_Bernstein: Okay so nothing's quite as efficient will will be as quite as efficient and practical as BBS in this scenario but.
[2024-09-03T16:57:28.999Z]	<Transcriber>	Greg_Bernstein: These are the kind of things we want for practical as a I'm quoting a Neil John we want practical privacy preserving.
[2024-09-03T16:57:34.080Z]	<Transcriber>	Greg_Bernstein: Cryptography for verifiable credentials.
[2024-09-03T16:57:37.564Z]	<Transcriber>	Greg_Bernstein: Meaning that we got to work in this third party model too.
[2024-09-03T16:57:40.986Z]	<Transcriber>	Greg_Bernstein: Okay I've been talking Non-Stop.
[2024-09-03T16:57:48.015Z]	<Transcriber>	Greg_Bernstein: Questions comments this is.
[2024-09-03T16:57:54.072Z]	<Transcriber>	Greg_Bernstein: Where we're at we're Oops I did not mean to do that um.
[2024-09-03T16:57:54.836Z]	<Transcriber>	Greg_Bernstein: We are trying.
[2024-09-03T16:57:57.989Z]	<Transcriber>	Greg_Bernstein: Trying to get uh all these uh.
[2024-09-03T16:58:06.761Z]	<Transcriber>	Greg_Bernstein: Requirements figured out and we've kind of figured out that we really want both Anonymous holder binding and pseudonyms.
[2024-09-03T16:58:08.670Z]	<Transcriber>	Greg_Bernstein: At the same time.
[2024-09-03T16:58:42.248Z]	<Harrison_Tang>	q+
[2024-09-03T16:58:56.201Z]	<Transcriber>	Greg_Bernstein: Um we yeah I mean that's where we're okay so there's 2 different pieces.
[2024-09-03T16:58:59.191Z]	<Transcriber>	Greg_Bernstein: We'd like to get things ratified.
[2024-09-03T16:59:20.765Z]	<Transcriber>	Greg_Bernstein: Eyes and we see a bit of hey we're going to let the ietf kind of standardize it and then maybe we'll bless it those standards those bodies we did see with the Udi our stuff that a bunch of cryptographers all came out and said you know.
[2024-09-03T16:59:29.217Z]	<Transcriber>	Greg_Bernstein: What you guys have isn't going to meet the requirements you put into the laws and what you really should do is use BBs.
[2024-09-03T16:59:32.706Z]	<Transcriber>	Greg_Bernstein: And variance of it and then.
[2024-09-03T16:59:32.970Z]	<Transcriber>	Greg_Bernstein:  people can.
[2024-09-03T16:59:36.284Z]	<Transcriber>	Greg_Bernstein: Back and said but we want a hardware route of trust.
[2024-09-03T17:00:00.338Z]	<Transcriber>	Greg_Bernstein: And then we said oh but then 1 person that worked on TPMS and algorithms for TPMS came back and said oh well you know we were working with TPM vendors and a lot of our stuff is done in firmware and we were trying to get some of that stuff fixed up and we could do this this and this so.
[2024-09-03T17:00:27.244Z]	<Transcriber>	Greg_Bernstein: So it's fluid that way and I will remind people that we got secure messaging not because it got dictate or better privacy private messaging not because of it getting incorporated into Hardware but because an open source effort like signal went and did it did it well made all the protocols.
[2024-09-03T17:00:45.748Z]	<Transcriber>	Greg_Bernstein: You know they wrote them up nicely so people could cryptographically reviewed them and Implement them well and then they privacy shamed the other guys WhatsApp and Google right so it's like are we gonna wait for this like to get all the way down in Hardware before we consider it so that's why.
[2024-09-03T17:00:57.752Z]	<Transcriber>	Greg_Bernstein: 1 last sales pitch data Integrity allows us to use multiple signatures right we can have a proof set we can sign it with.
[2024-09-03T17:01:04.694Z]	<Transcriber>	Greg_Bernstein: Cdsa selective disclosure we can sign up with BBs for Selective disclosure.
[2024-09-03T17:01:14.209Z]	<Transcriber>	Greg_Bernstein: So if somebody really doesn't trust 1 of those they can use the other right we're not locked into 1 cryptographic scheme here.
[2024-09-03T17:01:26.675Z]	<Harrison_Tang>	q-
[2024-09-03T17:01:46.802Z]	<Transcriber>	Greg_Bernstein: Yeah and yeah we all like Hardware roots of trust but if you've ever tried to use a TPM yourself or an application you'll go gee it only seems like the uh operating system vendors get to use these things for anything and does that mean they're gonna own the platform and we're not going to be able to use that good cryptography well then we're gonna have to figure out.
[2024-09-03T17:01:55.291Z]	<Transcriber>	Greg_Bernstein: A way to do that that maybe doesn't use the root of trust but I am hopeful we can get access to some of those things because it's nice.
[2024-09-03T17:01:57.955Z]	<Dave_Longley>	hardware protections are really best for protecting a user's device *on behalf of the user* (protecting them from malware, etc., whatever), vs. trying to protect the user's device *from the user* (which is extremely difficult and liberty-harming)
[2024-09-03T17:02:10.678Z]	<Transcriber>	Greg_Bernstein: Okay great talk to everyone later.
[2024-09-03T17:02:11.716Z]	<Harrison_Tang>	Love the presentation, Greg!
