[2024-07-09T15:56:12.362Z]	<Kimberly_Wilson_Linson>	present+
[2024-07-09T15:56:12.363Z]	<Harrison_Tang>	present+
[2024-07-09T15:56:12.364Z]	<Pascal_Knoth>	present+
[2024-07-09T15:56:14.289Z]	<Stephen_Curran>	present+
[2024-07-09T15:56:29.655Z]	<Stephen_Curran>	present+
[2024-07-09T15:56:37.933Z]	<Vasily_Suvorov,_Accelerate>	present+
[2024-07-09T15:57:18.863Z]	<John_Jordan-BC_Government>	present+
[2024-07-09T15:57:19.765Z]	<Pascal_Knoth>	present+
[2024-07-09T15:59:08.807Z]	<Martina>	present+
[2024-07-09T15:59:13.166Z]	<Hiroyuki_Sano>	present+
[2024-07-09T15:59:18.022Z]	<Pascal_Knoth>	present+
[2024-07-09T15:59:20.141Z]	<Nate_Otto>	present+
[2024-07-09T15:59:23.938Z]	<Jeff_O_-_HumanOS>	present+
[2024-07-09T15:59:24.922Z]	<Stephan_Wagner>	present+
[2024-07-09T15:59:30.044Z]	<Jennie_M>	present+
[2024-07-09T15:59:36.379Z]	<Gregory_Natran>	present+
[2024-07-09T15:59:52.252Z]	<Martina_Kolpondinos>	present+
[2024-07-09T16:00:15.905Z]	<Stephen_Curran>	present+
[2024-07-09T16:00:23.201Z]	<Martina_Kolpondinos>	present+
[2024-07-09T16:00:23.800Z]	<Kimberly_Wilson_Linson>	present+
[2024-07-09T16:00:25.094Z]	<Pascal_Knoth>	present+
[2024-07-09T16:00:26.001Z]	<Lucy_Yang>	present+
[2024-07-09T16:00:33.597Z]	<Markus_Sabadello>	present+
[2024-07-09T16:00:34.676Z]	<Bruno_Hivert_(he/him)_-_https://dtlab-labcn.org>	present+
[2024-07-09T16:00:35.182Z]	<Stephan_Wagner>	present+
[2024-07-09T16:00:41.322Z]	<TRBOUMA>	present+
[2024-07-09T16:00:49.993Z]	<Hiroyuki_Sano>	present+
[2024-07-09T16:00:50.654Z]	<Mahesh_Balan_-_pocketcred_com>	present+
[2024-07-09T16:01:08.417Z]	<Nate_Otto>	present+
[2024-07-09T16:01:18.003Z]	<Harrison_Tang>	present+
[2024-07-09T16:01:20.157Z]	<Pascal_Knoth>	present+
[2024-07-09T16:01:29.520Z]	<Daniel_B>	present+
[2024-07-09T16:01:39.176Z]	<Anil_John_[US/DHS/SVIP]>	present+
[2024-07-09T16:01:57.793Z]	<Transcriber>	scribe+
[2024-07-09T16:01:57.793Z]	<Transcriber>	Meeting: weekly
[2024-07-09T16:02:05.076Z]	<Transcriber>	Kimberly_Wilson_Linson: All right well welcome everyone.
[2024-07-09T16:02:08.514Z]	<James_Chartrand>	present+
[2024-07-09T16:02:10.477Z]	<Markus_Sabadello>	present+
[2024-07-09T16:02:13.605Z]	<Will_Abramson>	present+
[2024-07-09T16:02:30.423Z]	<Kamal_L>	present+
[2024-07-09T16:02:31.241Z]	<Joe_Andrieu>	present+
[2024-07-09T16:02:33.562Z]	<Laura_Paglione>	present+
[2024-07-09T16:02:35.154Z]	<Transcriber>	Kimberly_Wilson_Linson: Everyone uh to this Tuesday's ccg meeting um I think that uh before I even make an introduction we can tell that today is a very popular And Timely topic because of the number of folks that are attending today um I am super excited to hear from Stephen Curran today and I I know a couple of us have gone through the slide deck already and had a have a have a.
[2024-07-09T16:02:42.569Z]	<Transcriber>	Kimberly_Wilson_Linson: Really excited to hear what he has to say so I'm going to keep my housekeeping notes as brief as possible so that we can.
[2024-07-09T16:02:49.026Z]	<Transcriber>	Kimberly_Wilson_Linson: Hear from Stephen and then jump into uh what I think will be a very good discussion.
[2024-07-09T16:02:49.375Z]	<Transcriber>	Kimberly_Wilson_Linson:  so here.
[2024-07-09T16:02:49.978Z]	<econnell>	present+
[2024-07-09T16:02:55.231Z]	<Markus_Sabadello>	present+
[2024-07-09T16:03:02.640Z]	<PL/T3>	present+
[2024-07-09T16:03:05.793Z]	<Benjamin_Young>	present+
[2024-07-09T16:03:07.443Z]	<Alex_H>	present+
[2024-07-09T16:03:10.832Z]	<Manu_Sporny>	present+
[2024-07-09T16:03:13.613Z]	<Transcriber>	Kimberly_Wilson_Linson: Here we go running down the the agenda uh we follow the w3c code of ethics and professional conduct um which helps us to be a collaborative and productive uh working group or community group um and I think we are all uh we all have that type of mind um so if you want to read more about that you can look at it in the agenda.
[2024-07-09T16:03:27.180Z]	<Transcriber>	Kimberly_Wilson_Linson: Anyone is welcome to be a part of the these this call and we are grateful to have so many folks on today uh and hope that you will um consider joining us.
[2024-07-09T16:03:46.140Z]	<Transcriber>	Kimberly_Wilson_Linson: As often as you are able and if you are interested in in contributing work um on a more regular and uh basis then we would invite you to uh to become a member of the ccg with a assigned IPR agreement and you can do that uh in the links that are also in the agenda.
[2024-07-09T16:04:01.615Z]	<Transcriber>	Kimberly_Wilson_Linson: We keep calling notes um uh minutes and audio recordings of these meetings and we use uh the chat feature here to QR speakers so um anyone who wants to participate so you can just put on in the chat.
[2024-07-09T16:04:02.610Z]	<Patrick>	present+
[2024-07-09T16:04:05.604Z]	<Pascal_Knoth>	present+
[2024-07-09T16:04:09.025Z]	<Rashmi_Siravara>	present+
[2024-07-09T16:04:10.555Z]	<Transcriber>	Kimberly_Wilson_Linson: Q+ and now we'll add you to the queue and I will do my best to moderate this discussion um and be uh.
[2024-07-09T16:04:16.624Z]	<Transcriber>	Kimberly_Wilson_Linson: Mindful of trying to hear from as many voices as possible uh all right well now.
[2024-07-09T16:04:35.121Z]	<Transcriber>	Kimberly_Wilson_Linson: Come to uh the time in our call where I am going to invite anyone who is new to this community or hasn't been uh attending a meeting in a while uh to introduce themselves or reintroduce themselves let us know what you have been up to and you can go ahead and put yourself on the Queue to do so.
[2024-07-09T16:04:39.339Z]	<Transcriber>	John_Jordan-BC_Government: Can I just jump the queue Kimberly.
[2024-07-09T16:04:39.655Z]	<GregB>	present+
[2024-07-09T16:04:43.163Z]	<Transcriber>	John_Jordan-BC_Government: Since it's hard for me to.
[2024-07-09T16:04:46.354Z]	<Transcriber>	Kimberly_Wilson_Linson: You certainly can we're so excited to have you here yes John great the floor is yours.
[2024-07-09T16:05:01.259Z]	<Wendy_Seltzer>	present+
[2024-07-09T16:05:02.896Z]	<Transcriber>	John_Jordan-BC_Government: Hi sorry for me to get on the Queue yeah just I want to say hi and I haven't been here for a while so John Jordan from BC government and I just want to let that folks know that excited to hear people's comments and thoughts on the work we've been doing so Stephen and I have been working together for.
[2024-07-09T16:05:08.797Z]	<Transcriber>	John_Jordan-BC_Government: 7 almost 8 years now and the work that he's presenting is.
[2024-07-09T16:05:12.808Z]	<Transcriber>	John_Jordan-BC_Government: You know funded by the BC government so just so people know.
[2024-07-09T16:05:14.397Z]	<Anil_John_[US/DHS/SVIP]>	present+
[2024-07-09T16:05:16.574Z]	<Daniel_B>	present+
[2024-07-09T16:05:16.805Z]	<Transcriber>	John_Jordan-BC_Government: Where it's coming from and and uh have a great meeting.
[2024-07-09T16:05:20.922Z]	<Transcriber>	Kimberly_Wilson_Linson: Great thank you John.
[2024-07-09T16:05:21.942Z]	<Kimberly_Wilson_Linson>	q?
[2024-07-09T16:05:23.126Z]	<GregB>	present+
[2024-07-09T16:05:29.782Z]	<Transcriber>	Kimberly_Wilson_Linson: Anyone else like to introduce themselves or reintroduce themselves.
[2024-07-09T16:05:38.804Z]	<Transcriber>	Kimberly_Wilson_Linson: All right how about updates.
[2024-07-09T16:05:38.827Z]	<Pascal_Knoth>	present+
[2024-07-09T16:05:39.088Z]	<Transcriber>	Kimberly_Wilson_Linson:  for the.
[2024-07-09T16:05:42.766Z]	<Transcriber>	Kimberly_Wilson_Linson: Community do we have any announcements reminders.
[2024-07-09T16:05:43.037Z]	<Transcriber>	Kimberly_Wilson_Linson:  I think.
[2024-07-09T16:05:45.276Z]	<Transcriber>	Kimberly_Wilson_Linson: That everyone needs to know about.
[2024-07-09T16:05:49.166Z]	<econnell>	q+
[2024-07-09T16:06:15.864Z]	<Rashmi_Siravara>	present+
[2024-07-09T16:06:34.208Z]	<Transcriber>	Lucy_Yang: Thank you Kimberly um a few weeks ago I presented about the under California um mobile driver's license Community hackathon I just want to provide a quick update so we have firm up the dates for the for both events the first events will be open to anyone to apply that will be on October 1st um and and then we will have a separate government a government event that will be taking place in Sacramento right after IBEW under that 1 will be on November uh 1st on on a Friday the first 1 will be in Silicon Valley in Computer History Museum so I will share to the list and the updated brief we just got approved but for potential participants but I just want to share an update so everyone knows that we you know we have dates and firmed up thank you.
[2024-07-09T16:06:38.884Z]	<Transcriber>	Kimberly_Wilson_Linson: Great thanks Lucy that's really exciting uh Erica.
[2024-07-09T16:06:47.482Z]	<Kimberly_Wilson_Linson>	q?
[2024-07-09T16:06:49.895Z]	<Dmitri_Zagidulin>	present+
[2024-07-09T16:07:02.102Z]	<Transcriber>	econnell: I just a quick announcement that rebooting the web of trust uh will be convening in Ventura California in October uh 7th through 11th so it's the time of year to get your Advanced reading papers in and I'll drop the link in the chat the early bird tickets are available now thanks that's it.
[2024-07-09T16:07:02.592Z]	<Transcriber>	Kimberly_Wilson_Linson: Great thank you.
[2024-07-09T16:07:07.153Z]	<Vasily_Suvorov,_Accelerate>	present+
[2024-07-09T16:07:07.607Z]	<Transcriber>	Kimberly_Wilson_Linson: Anyone else with an announcement or reminder for the community.
[2024-07-09T16:07:18.628Z]	<Transcriber>	Kimberly_Wilson_Linson: All right well do you have anything to share with the community about uh work items.
[2024-07-09T16:07:25.608Z]	<econnell>	https://rwot13.eventbrite.com/
[2024-07-09T16:07:28.942Z]	<Taylor_-_LEF>	present+
[2024-07-09T16:07:48.867Z]	<Transcriber>	Kimberly_Wilson_Linson: No no worries I just wanted to make sure I didn't didn't skip it on our bulleted list but I think we want uh all the time we can have for Stephen today anyway so that's perfect uh all right well in in that case I'm going to go ahead and uh turn it over to Stephen I don't think he needs much more of an introduction um I think everyone knows he's a Pioneer in this space and we're really glad to have him so Steve in the floor is yours.
[2024-07-09T16:07:49.905Z]	<Transcriber>	Stephen_Curran: Awesome thank you so much you can hear me.
[2024-07-09T16:07:53.611Z]	<Transcriber>	Kimberly_Wilson_Linson: We can hear you great.
[2024-07-09T16:07:56.505Z]	<Transcriber>	Stephen_Curran: All right and sharing.
[2024-07-09T16:07:58.250Z]	<Mahesh_Balan_-_pocketcred.com>	present+
[2024-07-09T16:08:00.855Z]	<Andrew_Whitehead>	present+
[2024-07-09T16:08:04.391Z]	<Transcriber>	Kimberly_Wilson_Linson: We see it.
[2024-07-09T16:08:14.775Z]	<Anil_John_[US/DHS/SVIP]>	present+
[2024-07-09T16:08:37.218Z]	<Transcriber>	Stephen_Curran: All right screen is there excellent okay did TDW trust did web or if you say it fast trusted web um a uh thing we've been working on as John mentioned from uh government of British Columbia digital trust team a verifiable portable web-based did method with history um perhaps even considered an extension to did web so that's where we're going today um going to give a bit of a background um I know there's not a lot needed on bids and did methods but I'll talk about that briefly Ledger base dids benefits and costs.
[2024-07-09T16:08:48.663Z]	<Transcriber>	Stephen_Curran: Did web in particular web-based is benefits and costs and then get into um what trust did web is talk about the mechanics and some other topics.
[2024-07-09T16:08:50.741Z]	<TallTed_//_Ted_Thibodeau_(he/him)_(OpenLinkSw.com)>	present+
[2024-07-09T16:09:00.621Z]	<Transcriber>	Stephen_Curran: Um so did its decentralized identifiers um decentralized self-created and published identifiers um versus centralized.
[2024-07-09T16:09:13.206Z]	<Transcriber>	Stephen_Curran: So not giving to you um and published such that given it did it's resolved into an Associated did do and all standardized in the did course back.
[2024-07-09T16:09:18.543Z]	<bengo>	present+
[2024-07-09T16:09:28.448Z]	<Transcriber>	Stephen_Curran: Did docs contain um public Keys generally um allowing uh signing of data that others can verify receiving encrypted data from others that only um that did control or can decrypt.
[2024-07-09T16:10:00.671Z]	<bengo>	present+
[2024-07-09T16:10:08.939Z]	<Transcriber>	Stephen_Curran: And crucially um can be rotated without changing the identifier and that's a lot about what we're talking about here which is how do you rotate Keys um within a did Doc without changing the identifiers um often they contain service endpoints that resolvers can use to contact the owner in some way get files from them get verifiable credentials verifiable presentations various other things they can do communicate with them and I've got a couple of links here for example I did publish the um uh link to the slides if anyone wants to throw that into the chat that would be good.
[2024-07-09T16:10:22.439Z]	<Mahesh_Balan_-_pocketcred.com>	present+
[2024-07-09T16:10:28.054Z]	<Kimberly_Wilson_Linson>	https://docs.google.com/presentation/d/12NSbKbE3YfjjPuq8m0uEdn6hQ43wbW3YrW5auksbASQ/edit#slide=id.p
[2024-07-09T16:10:29.289Z]	<Transcriber>	Stephen_Curran: Um so use cases issuers issue verifiable credentials that are verified using a key published in a did do um proof of control so if you've got a subject that is uh the subject of a verify the credential the holder for example could prove that they are the subject.
[2024-07-09T16:10:40.506Z]	<Kimberly_Wilson_Linson>	Presentation Link above:
[2024-07-09T16:10:40.774Z]	<Transcriber>	Stephen_Curran: By using their did and and using the key within the did um can be used in combination or instead of a centralized identifier so 1 of the things we're going to talk about here is um.
[2024-07-09T16:10:56.675Z]	<Anil_John_[US/DHS/SVIP]>	present+
[2024-07-09T16:10:57.153Z]	<Brian>	present+
[2024-07-09T16:10:57.673Z]	<Transcriber>	Stephen_Curran: Um cryptographically uh having it did for cryptographically proving things that it is there did but have it also bound to their legal identity bound to their um uh legal entity identifier from whatever they were issued by their jurisdiction.
[2024-07-09T16:10:59.305Z]	<Transcriber>	Stephen_Curran: You can even use.
[2024-07-09T16:10:59.881Z]	<Mahesh_Balan_-_pocketcred_com>	present+
[2024-07-09T16:11:04.539Z]	<Kaliya_Identity_Woman>	present+
[2024-07-09T16:11:54.860Z]	<Transcriber>	Stephen_Curran: For people to use as email addresses cell phone number Replacements um blue sky is doing um some really interesting things where where Blue Sky identities um identifiers on the blue sky Network are actually did with a handle for the person um but the identifiers itself is it did and the keys for managing and that get used as part of using your blue sky identifier comes from the did Doc so um think of a service that might provide email um messaging different kinds of services and being able to use a did for that and have a key associated with it um obviously for people they would have as many as they would need your work did your you know just like you have your work email address and your personal email address and your gaming email address and so on all of those things could be separate dates for an individual.
[2024-07-09T16:12:30.672Z]	<Transcriber>	Stephen_Curran: Um objects related to it and peer-to-peer messaging is also um really useful did Cam messaging is all based on dids and using um peer-to-peer messaging so uh did methods as we know are are are the it did Define simply that there are dids did resolve and you get a did Doc out of it and here's the format of it did Doc did methods are how you store a did such that it can be resolved and there are yes 195 last time I checked and I must confess that I only checked 3 weeks ago so it could be larger than that.
[2024-07-09T16:12:33.034Z]	<Micah_Peltier>	present+
[2024-07-09T16:12:40.366Z]	<Transcriber>	Stephen_Curran: Largely um the the addition of of did methods came about because every um.
[2024-07-09T16:13:04.142Z]	<bobwyman>	present+
[2024-07-09T16:13:07.213Z]	<Brian>	present+
[2024-07-09T16:13:11.315Z]	<Adam_Burdett>	present+
[2024-07-09T16:13:26.181Z]	<Transcriber>	Stephen_Curran: Every platform every um blockchain every Ledger that came out um had has its own did method and way to publish it did on a given um platform and that's a result in many did methods um each 1 different um and requiring often special software for publishing and resolving it did um there is a universal resolver and register um published by uh diff and and managed um by this call but but those aren't recommended for production at least the public versions of those but you could run your own so those are all of course open source and you could um deploy your own Universal resolver and registar.
[2024-07-09T16:14:00.733Z]	<Transcriber>	Stephen_Curran: Um ledgers were very popular for using it um and and this gives some context for um the did TDW so dids are exactly the kind of public data that are ideal to put on a ledger anything you want absolutely published for the rest of the world to be able to see in you so public um ledgers are robust always available replicated across nodes the ordering is um verified there's no need to call home to the owner of the did to get the did do it's it's in a a third party that's distributed around.
[2024-07-09T16:14:14.225Z]	<Transcriber>	Stephen_Curran: Um when you update a did when you rotate it all of the previous versions remain available um you you have to prove who you are you have to um.
[2024-07-09T16:14:29.746Z]	<Emiliano_Sune>	present+
[2024-07-09T16:14:42.326Z]	<Transcriber>	Stephen_Curran: Uh have authorization to update it did or to to add or update anything on a ledger so that's covered um immutable once it's once it's version is published it can't be altered and and even if the issuer disappears if if um if they dissolve as a company their website goes away Ledger base dids can't be deleted so that can be very important for long lasting verifiable credentials.
[2024-07-09T16:15:24.046Z]	<Transcriber>	Stephen_Curran: Um public ledgers have Associated cryptocurrencies often and that's an issue in quotes for some um it's it's pretty tough for John Jordan to go to the premiere and say hey we just need to get some Bitcoin to um to Route the trust of all of our our citizens um credentials um that's a little bit of a tough 1 so but if you don't have a token it's pretty hard to operate a ledger who pays um how to how does that get managed um interfacing can be difficult um and there are many many types and many instances of ledgers and that's created many did methods and as a result we wind up with.
[2024-07-09T16:15:26.154Z]	<Transcriber>	Stephen_Curran:  so we get.
[2024-07-09T16:15:29.168Z]	<Joe_Andrieu>	present+
[2024-07-09T16:15:42.764Z]	<Transcriber>	Stephen_Curran: Did web is is brilliant and dead simple there um but it's got some issues um did web of course is just simply publishing the did do at a defined place on the on on a web server and you.
[2024-07-09T16:16:20.270Z]	<Transcriber>	Stephen_Curran: Convert the dead string into an HTTP address and retrieve the file at that point um you don't get any history so if um if the key has been if the did has been rotated a new version of the did doc has been published um any previously active public Keys may not be there um there's no verification of that non-existent history so who made the change was it actually made by the controller of the did or did someone decide to take over um the publishing of it and and should should everyone trusts that change.
[2024-07-09T16:16:20.685Z]	<Transcriber>	Stephen_Curran:  its not.
[2024-07-09T16:16:21.108Z]	<Transcriber>	Stephen_Curran: Lot of you.
[2024-07-09T16:16:46.578Z]	<Transcriber>	Stephen_Curran: Is the current version really what was published if the if the controller decides hey I didn't mean to publish that key I met this other key so I'm just going to publish again that could be considered a rotation or it could be an update to the current version it's really not too clear um the loss of control there there's often a call home to the did owner to retrieve it.
[2024-07-09T16:16:59.998Z]	<Transcriber>	Stephen_Curran: But on the other hand as a bonus if the domain name is is associated with the owner of the debt you get a benefit from that and there's a spec that I've linked here um for.
[2024-07-09T16:17:10.117Z]	<Transcriber>	Stephen_Curran: Dns-based High asuransi did web um that could be added and and I'll talk about that later because it also applies to the TDW.
[2024-07-09T16:17:27.174Z]	<Transcriber>	Stephen_Curran: Um and of course you may lose control of your your web service and and your uh your did web may have to be deleted disappeared and moved so it's not overly portable and that's an issue.
[2024-07-09T16:18:21.372Z]	<Transcriber>	Stephen_Curran: Um our our claim as we started this work because there's there's really just 3 core bid methods um 2 special purpose ones that that we think are incredibly valuable did key for just a raw public key wrapped as it did so that you can use it in place of any other did and then did Pierre which is not published per se but actually shared between peers so only the the 2 or 3 or however many parties that are are in a peer relationship actually discover and learn about the Deads they they simply transfer them between 1 another um but that allows um the use of dids to be dids to be used but only between those parties that need them and then the last 1 for any published did did web is the only 1 that really has traction.
[2024-07-09T16:18:41.566Z]	<Transcriber>	Stephen_Curran: But as mentioned before dead simple to use but kind of inefficient and all the other did methods are really just competing um to be noticed to try to say hey use this did method because it's on a platform that's that's really valuable and and that's that's more a a competition.
[2024-07-09T16:18:41.889Z]	<Transcriber>	Stephen_Curran:  so our.
[2024-07-09T16:18:55.004Z]	<Anil_John_[US/DHS/SVIP]>	present+
[2024-07-09T16:19:10.426Z]	<Transcriber>	Stephen_Curran: Premise there's not a sufficiently capable dominant dig method for public bids and so we get to x uh XKCD um so we get to this um we thought hey there's only 195 so what would be 1 more that can't be that bad so that's what we did did TDW um trust did Webb specification linked on this slide and also at the end so that's available.
[2024-07-09T16:19:14.628Z]	<Transcriber>	Stephen_Curran: Um so let me jump into what that is.
[2024-07-09T16:19:24.946Z]	<Tim_Bloomfield>	present+
[2024-07-09T16:19:41.365Z]	<Transcriber>	Stephen_Curran: Um very similar to did web but with a ledger list verifiable history so um what would some would call a micrel ledger um instead of or beside and it could be both um the the did webs did Json file there is a did Json L and that is not a typo um that's an extra l meaning Json lines and I'll mention that in a little bit.
[2024-07-09T16:20:02.506Z]	<Transcriber>	Stephen_Curran: A resolver would retrieve uh and process the Json L file and and retrieve in that action the entire did Doc history so all of the versions of the did do chained together so they're um chained as in a as in the blockchain um.
[2024-07-09T16:20:09.530Z]	<JoeAndrieu>	present+
[2024-07-09T16:20:09.576Z]	<Transcriber>	Stephen_Curran: Type of thing and all of them signed by the did controller so that authorization can be done.
[2024-07-09T16:21:10.606Z]	<Transcriber>	Stephen_Curran: Um that did contains a self-certifying identifier and and that enables uniqueness and portability and we'll talk a bit about portability um we've added to this defined URL path handling and 2 really important things um did Slash path to file gets resolved to a file and and that file can be used for various things associated with the did so it's it's uh you want to provide some mechanism to a good to associate that file that gets produced with the did and then did Slash who is which John Jordan came up with which is a really cool way of determining much like you use who is on the internet who is the controller of the did based on the attestations that have been received by that did from others um so that could be a way that is a way we we hope and we'd love to see every did method implemented as a way to find out.
[2024-07-09T16:21:10.733Z]	<Anil_John_[US/DHS/SVIP]>	Love the /whois feature!
[2024-07-09T16:21:28.261Z]	<Transcriber>	Stephen_Curran: Oh I got this did or I got this verifiable credential presented to me and it's from some issuer let me just do a did Slash who is to find out who that issuer was and so a a really good way to um determine who is behind a given did.
[2024-07-09T16:21:46.753Z]	<Brian>	present+
[2024-07-09T16:22:05.590Z]	<Transcriber>	Stephen_Curran: Small and simple implementation with minimal dependencies I'll get to that list and high security features um so um we borrowed a few things here from um the concepts that have gone into carry so things like pre- rotation and Witnesses and then as well um DNS binding um using that mechanism for um DNS High Assurance with did web well it can also be done with did TDW to create a um a a back and forth between DNS and the did.
[2024-07-09T16:22:22.924Z]	<Rashmi_Siravara>	present+
[2024-07-09T16:22:38.024Z]	<Transcriber>	Stephen_Curran: So um this is what it did looks like did TDW Aviary ID and then a skid so this long 28 or more character um hash is a skid uh self self-certifying identifier and this resolves to um in this case we matches exactly what um this did web of this would be which is https Avery Aviary ID slash.
[2024-07-09T16:22:45.975Z]	<Transcriber>	Stephen_Curran: Then the skid which is in this case a folder or at least a logical folder and then slashed did jsonl.
[2024-07-09T16:22:46.822Z]	<John_Henderson>	present+
[2024-07-09T16:22:53.493Z]	<Transcriber>	Stephen_Curran: Um so that's how you retrieve how you take a did convert it and retrieve the log.
[2024-07-09T16:23:22.375Z]	<Kim_Duffy>	present+
[2024-07-09T16:23:22.797Z]	<Transcriber>	Stephen_Curran: Um Kudos here to uh in particular Brian Brian rior and Whitehead and John Jordan for um collaborating on this we we did a lot of iteration on requirements implementation specification back to requirements um we think we've got a reasonably clear simple and complete spec and and that's what's linked um to implementations less than 1500 lines of code in typescript.
[2024-07-09T16:23:40.669Z]	<Transcriber>	Stephen_Curran: Um but we're definitely um you know looking for feedback um security Simplicity Clarity and and what more can we achieve with it so that's where we're going next and I'll have it at the very end a slide on how we can get help on this so to the mechanics.
[2024-07-09T16:23:44.618Z]	<Transcriber>	Stephen_Curran: Um I am watching the um.
[2024-07-09T16:23:47.582Z]	<Transcriber>	Stephen_Curran: Uh the uh.
[2024-07-09T16:23:55.115Z]	<Transcriber>	Stephen_Curran: Uh chat go through them so if anyone has any questions or anything and want to jump in uh I can see that.
[2024-07-09T16:24:01.667Z]	<Transcriber>	Stephen_Curran: Um the mechanics so it did to http transformation is identical to um.
[2024-07-09T16:24:11.885Z]	<Transcriber>	Stephen_Curran: Uh did web except there must be a skid this 1 12345 represents the skid so it can be in a in a path.
[2024-07-09T16:24:56.826Z]	<Transcriber>	Stephen_Curran: It could be in the subdomain and so you got a well-known and we're also playing with mechanisms and this is the issue related to that of how to add the skid in some convention to the did such that um you you have it at the root of the domains uh do well known so um this isn't in the uh the spec yet but we've got an issue for how to do it and so this is 1 possibility and underscore is an invalid character for a TLD so that did could have underscore and then the skid and then we we just dropped the skid from that so the skid remains in the did but dropped from the URL.
[2024-07-09T16:25:18.244Z]	<Sharon_Leu>	present+
[2024-07-09T16:25:18.712Z]	<Transcriber>	Stephen_Curran: As I mentioned um once you've done the conversion retrieve and process the log and each entry produces a deduct version so this is what a log looks like this is where the Json L Json lines comes in each each entry is a an array of Json so uh an array.
[2024-07-09T16:25:25.072Z]	<Bruno_Hivert_(he/him)_-_https://dtlab-labcn.org>	You could use the user/password @ feature of an URL
[2024-07-09T16:25:40.442Z]	<Manu_Sporny>	yes ^
[2024-07-09T16:25:46.749Z]	<Andrew_Whitehead>	@ is only allowed in the ID part if percent-encoded
[2024-07-09T16:25:56.027Z]	<Transcriber>	Stephen_Curran: You uh 6 different values always exactly 6 um an entry hash which is just a string it's a hash a version ID which is a number starting with 1 and must increment by exactly 1 on each version version time is determined by the um uh issuer the controller of the did so it's whatever time they put but it is verified to be incrementing and before now so you can't publish what you did in the future and all of the versions have to be incrementing.
[2024-07-09T16:26:12.936Z]	<Transcriber>	Stephen_Curran: Um parameters we're going to talk about parameters you've got the did Doc itself in this as an entry and finally there's data Integrity proofs on this um generally 1 but but depending on the security features you're using could be multiple.
[2024-07-09T16:26:25.210Z]	<Taylor_-_LEF>	present+
[2024-07-09T16:26:40.037Z]	<Transcriber>	Stephen_Curran: Um so that is what it looks like I'm going to briefly show 1 of of what it looks like but I'll get into more uh I'll repeat this slide a little later so you've got your entry hash you've got your version your time the parameters this is a very very simple the doc which only has the ID field in it so it's very simple and then finally you've got it and data Integrity proof.
[2024-07-09T16:26:48.108Z]	<Transcriber>	Stephen_Curran: So that's what a each log entry looks like um Json lines is as I mentioned um.
[2024-07-09T16:27:19.187Z]	<Transcriber>	Stephen_Curran: Um lines where a car uh a carriage return um is between each 1 so it makes it nice for building at logs it turned out that um the Andrew and Brian came up with this um design and discovered that Json lines was a thing um Sam Sam Curran pointed out that Json lines was a thing hence where we got to using the term Json lines in that evidently it's very commonly used at Amazon and other places.
[2024-07-09T16:28:12.821Z]	<Transcriber>	Stephen_Curran: Okay the parameters item is the most unique thing on that list I think everything else in that array is recognized the parameters is what allows you to control how the generation of the did version is done and how the verification can be done so it's a Json Str with information about how to process the log um it's got configuration setting and what version of the spec are you using what hashing algorithm are you using what cryptography um algorithm are you using so um these items are to enable long lasting um uses of the keys of of a did and the keys within a did so their opinionated for interoperability um the spec contains which hashing algorithms are are permitted to be used.
[2024-07-09T16:28:43.778Z]	<Transcriber>	Stephen_Curran: Um cryptographic algorithms are permitted to be used um but they're agile to enable long-lasting and the whole idea there is a new version of a spec enables different hashing algorithms to be used in different cryptography and you can specify at any point in any version Oh I'm switching to version 2.0 of the spec so that allow that notifies the verifiers but it also constrains the in the um choices that the.
[2024-07-09T16:28:55.940Z]	<Transcriber>	Stephen_Curran: In which hashing algorithms they're allowed to use which cryptography they're allowed to use so this balance between opinionated for interoperability and agile for long-lasting DS.
[2024-07-09T16:29:03.795Z]	<Mahesh_Balan_-_pocketcred.com>	present+
[2024-07-09T16:29:15.479Z]	<Transcriber>	Stephen_Curran: Um there is a an entry that contains the authorized keys to update the data and I've got a slide later about that um the authorized keys to update the data do not come from the didck itself but rather are um declared in the parameters item.
[2024-07-09T16:29:41.009Z]	<Transcriber>	Stephen_Curran: Um there's data to manage additional features so there's some Advanced features and and the parameters can be empty for some did versions meaning hey the parameters that used to apply they continue to apply I'm not changing any of them so just keep processing it using those parameters so a verifier has to track you know which parameters are in effect at what time when they're processing.
[2024-07-09T16:29:56.748Z]	<Transcriber>	Stephen_Curran: Of the dependencies this is the dependency list um Json lines um base 32 encoding we're using base 32 because of um the desire to use the um hashing algorithm.
[2024-07-09T16:30:02.774Z]	<Transcriber>	Stephen_Curran: Um the hash I mean in the skid and therefore in the did and in the http.
[2024-07-09T16:30:34.117Z]	<Transcriber>	Stephen_Curran: Um we're using Shaw 3256 right now we're using Json patch as to transition from 1 did Doc to the next so the idea is the first record will have the entire did Doc in it subsequent can either have the entire did Doc or can have a Json patch which is just the um previous the patch to the previous version to create the new version um we've got an issue been posted to say hey maybe we should drop that so we're still debating that.
[2024-07-09T16:30:43.099Z]	<Transcriber>	Stephen_Curran: Um multi key is used to tell which type of key is being used in particular in the um authorized Keys list.
[2024-07-09T16:30:54.624Z]	<Transcriber>	Stephen_Curran: What is the format of the key so that again speaks to that what cryptography Suites are we allowing to be used and then for a particular entry which which um.
[2024-07-09T16:30:58.102Z]	<Transcriber>	Stephen_Curran: Which algorithm is being used for a given key.
[2024-07-09T16:31:36.819Z]	<Transcriber>	Stephen_Curran: Um we've got Json canonicalization scheme used um again there's another issue or at least comments on an issue about using something less than that something simpler um and w3c data Integrity using JCS and eddsa so that's the um data Integrity proof format um that is in Spec of uh the current version of the spec uses did key for the key reference there is an an issue raised again about maybe we should be using jws for this so um those are the type of discussions that are happening right now as far as the um.
[2024-07-09T16:31:40.111Z]	<Transcriber>	Stephen_Curran: Uh the spec.
[2024-07-09T16:32:03.131Z]	<Transcriber>	Stephen_Curran: Um a bit more on the mechanics I'm not going to take long on this um I'll try to be quick because this gets into the technical details but for those that are um have a a technical belt of how we do things um I'll cover the skid generation how an entry hash gets created and what is involved in the data Integrity proof for signing and verifying.
[2024-07-09T16:32:23.300Z]	<Transcriber>	Stephen_Curran: Um so a skid selfish uh self-certifying identifier is generated on creation of the did itself so it is done when the first log entry is created and the way you do that is you construct the first log entry.
[2024-07-09T16:32:58.319Z]	<Transcriber>	Stephen_Curran: Um minus the proof so the data Integrity proof will be added later so we don't include that in this and then we have special whole uh placeholder the literal string curly brace s c i d in capitals and then a closed curly brace that literal string is put wherever the skid will eventually be placed so um first of all it's going to appear here in the um in the first and I'll talk about why it appears here in the first entry.
[2024-07-09T16:33:27.353Z]	<Transcriber>	Stephen_Curran: Parameters at least um at least once and it is guaranteed to appear at least once in the did dog because it has to be in the ID value of the did dog so we're going to have multiple places where this curly brace skid curly brace appears so we we start with that and then we do this calculation we take the input with the placeholders we use um Java or Json canonicalization scheme.
[2024-07-09T16:33:52.415Z]	<Transcriber>	Stephen_Curran: We have the output of that we base 32 that we lowercase it because we want to use it in in the um did string and the HTTP string and finally we take the first at least 28 um characters of that and that becomes the skit so that calculation is done out once when we're first creating it.
[2024-07-09T16:33:55.689Z]	<kimhd>	s/did dog/did doc
[2024-07-09T16:34:11.143Z]	<Transcriber>	Stephen_Curran: After you create the version the the scheme the parameters and the did do you calculate the skid and then you do a simple test text replacement of the skid for wherever you see the placeholder and that gives us both the first entry.
[2024-07-09T16:34:11.309Z]	<Andrew_Whitehead>	That slide should say something like {"value": {...<DIDDoc>...}}
[2024-07-09T16:34:18.634Z]	<Transcriber>	Stephen_Curran: And for most of the first entry and gives us our skid that we're going to use from now on for this identifier.
[2024-07-09T16:34:33.354Z]	<Transcriber>	Stephen_Curran: Next we have um the calculation of the entry hash so on every the first value in every line is the entry hash.
[2024-07-09T16:34:45.530Z]	<Transcriber>	Stephen_Curran: So again this time we start with an input log minus um the data Integrity proof we haven't added that but we we do have the skid if it's the very first 1.
[2024-07-09T16:35:17.412Z]	<Transcriber>	Stephen_Curran: Um this 1's the second 1 so um the skid isn't there um so we have a value here of of an input entry hash we have and then the rest of the parameters here's the Syntax for what the patch looks like so in the previous 1 we had value equals did Doc and this 1 we've got patch people's dish do did do and that's how you can tell whether um you've got the folded dock in this value or you just have the patch.
[2024-07-09T16:35:44.920Z]	<Transcriber>	Stephen_Curran: Okay so um we want to change these all together we want to create a micro Ledger we want to create a a linkage between a previous entry of the of the log and the current 1 and that um prevent is that sort of goal of immutable if you will if I can use that term from a micro Ledger perspective um it's not as immutable as what published on a ledger and.
[2024-07-09T16:35:57.443Z]	<Transcriber>	Stephen_Curran: With all of the the you know the consensus algorithm and so on but it is the micro Ledger equivalent so in the very first version we initially set the value to the skid.
[2024-07-09T16:36:08.675Z]	<Transcriber>	Stephen_Curran: All other versions We put we set this entry hash to the previous entry hash so that is what creates the linkage we.
[2024-07-09T16:36:14.013Z]	<Transcriber>	Stephen_Curran: Ulate the entry hash based on the previous value leading into it.
[2024-07-09T16:36:30.799Z]	<Transcriber>	Stephen_Curran: We then do a calculation much like we did previously we JCS that input we hash it we base 32 we lower it and we get a calculated entry hash and then we simply take that value and we play replace it with uh.
[2024-07-09T16:36:36.738Z]	<Transcriber>	Stephen_Curran: Replace what was their previously with this calculated value and now we have our entry hash.
[2024-07-09T16:36:39.728Z]	<Transcriber>	Stephen_Curran: So that's the second calculation we do.
[2024-07-09T16:36:43.486Z]	<Transcriber>	Stephen_Curran: Um adding a proof.
[2024-07-09T16:36:50.074Z]	<Transcriber>	Stephen_Curran: The data Integrity proof is across the did do so you take the current did do.
[2024-07-09T16:37:02.621Z]	<Transcriber>	Stephen_Curran: You use the entry hash as a challenge and it's got to be signed by an authorized key and I haven't shown the authorized key but I'll show you that in a moment I took that out of the slides but it's there in a moment.
[2024-07-09T16:37:11.096Z]	<Transcriber>	Stephen_Curran: Um so once I we have the data Integrity proof we add that as the last entry of the log so that's Sixth and last entry.
[2024-07-09T16:37:23.046Z]	<Pascal_Knoth>	present+
[2024-07-09T16:37:32.686Z]	<Transcriber>	Stephen_Curran: And finally we append that new log entry as Json line so we take that array we remove all the um unneeded white space and that becomes the um New log entry with Carriage turn in it so we append that um to whatever we previously have as the log and we.
[2024-07-09T16:37:40.082Z]	<Transcriber>	Stephen_Curran: Publish that or republish it as they as the did jsonl file so that's how we get there.
[2024-07-09T16:38:08.743Z]	<Transcriber>	Stephen_Curran: Um I threw this in at the last minute just to remind her a verification is any time I've said I've I've talked about how you get your data Integrity proof how you get the skid how you get the entry hash the the the the version must be incrementing that the time must be incrementing all of those are the things that are done on verification you grab it and you do all of those operations that were used to produce the log to verify the log.
[2024-07-09T16:38:34.626Z]	<Transcriber>	Stephen_Curran: So back to this screen so again we've got our entry hash we've gone over how we got that um this is a number that increments has to increment by 1 this is the um time um again controller asserted um but we do verify that it is incrementing and before now.
[2024-07-09T16:39:04.747Z]	<Transcriber>	Stephen_Curran: These are the this item in blue is the parameters so we've got oh we're using version 1 of the did TDW spec so that's our method the hash algorithm we're using is Shaw 3256 the skid is this and the skid appears here in the parameters so that we don't have to parse and look for it we just know what it is based on the parameters this will only appear in the very first item in the log.
[2024-07-09T16:39:19.616Z]	<Transcriber>	Stephen_Curran: And then we've got an array that are the update keys in um multi-key format and these are the keys that are permitted to update um to sign the data Integrity proof.
[2024-07-09T16:39:28.210Z]	<Transcriber>	Stephen_Curran: Um so when we rotate it it's basically or or key rotate the uh.
[2024-07-09T16:39:36.558Z]	<Transcriber>	Stephen_Curran: Keys what we're doing is updating this parameter we're putting a new array in here of new keys that would update it.
[2024-07-09T16:39:47.592Z]	<Transcriber>	Stephen_Curran: Um we have the did itself here we've got value equals so this is the entire did document we could have patch here and this would be Json patch.
[2024-07-09T16:39:56.110Z]	<Transcriber>	Stephen_Curran: And then finally we're using uh data Integrity proof we're using the E ecdsa JCS 2019.
[2024-07-09T16:40:04.570Z]	<Transcriber>	Stephen_Curran: That's currently the 1 that's specified um supported and did TDW um spec version 1.
[2024-07-09T16:40:10.642Z]	<Transcriber>	Stephen_Curran: The verification method is the did key pointing to this 1.
[2024-07-09T16:40:18.044Z]	<Transcriber>	Stephen_Curran: And and so on um I think I've got this elsewhere but just to point out.
[2024-07-09T16:40:30.049Z]	<Transcriber>	Stephen_Curran: In the very first version this is version 1 um update Keys is added from then on the data Integrity proof must be signed by the.
[2024-07-09T16:40:35.924Z]	<Transcriber>	Stephen_Curran: Active up-to-date Keys um that are in place.
[2024-07-09T16:40:40.262Z]	<Transcriber>	Stephen_Curran: And that's it for the basics.
[2024-07-09T16:40:45.561Z]	<Transcriber>	Stephen_Curran: So I'll leave a second open for any questions man.
[2024-07-09T16:41:02.016Z]	<Kimberly_Wilson_Linson>	ack econnell
[2024-07-09T16:41:36.173Z]	<Dmitri_Zagidulin>	q+
[2024-07-09T16:41:46.130Z]	<Transcriber>	Manu_Sporny: Yeah this this is fantastic Stephen so I I was able to look through the slide deck before the presentation your um explanation of it uh matches um what I was thinking uh was going on here so so it's it's great um I I I definitely agree um with the notion that you know just standard did web probably needs some and or if not all of this stuff um uh for some some of the higher security use cases um I'm wondering if uh there's been a lot of discussion or any discussion about kind of the optionality here meaning like you know if if it were you know if did web were to pull in some of these features or if we I not my personal opinion is ideally merged the specifications um what what are the thoughts around optionality meaning like some folks may just want to use um.
[2024-07-09T16:41:57.313Z]	<Transcriber>	Manu_Sporny: Some of the features not all of them um have you have you discussed kind of optionality and what can be optional and what's a definitely not optional thing yet.
[2024-07-09T16:42:05.563Z]	<Transcriber>	Stephen_Curran: Yes um so the spec outlines what optional and what's um required um.
[2024-07-09T16:42:33.230Z]	<Markus_Sabadello>	q+
[2024-07-09T16:42:33.622Z]	<Transcriber>	Stephen_Curran: 2 2 or 3 of the main features uh first of all the I'll get back into it a little bit more because I've got further slides to go after this this is the the slide about publishing it did web is is you could actually publish the 2 beside each other and it's it's a very simple text replacement literal text replacement of did TDW for did Webb and then inserting a also known as for the did TDW did.
[2024-07-09T16:43:01.706Z]	<Transcriber>	Stephen_Curran: And and then you just publish the file so it's very simple to use to actually produce it did web from this and let it be known oh by the way there's a log for this did if you want to use it um and you want to verify every part of this so that's probably the quickest answer um but uh there it's very clear which option or which items are are optional and which are required.
[2024-07-09T16:43:05.124Z]	<Transcriber>	Kimberly_Wilson_Linson: Great thank you Dimitri you're next.
[2024-07-09T16:43:07.695Z]	<Transcriber>	Dmitri_Zagidulin: Yeah just wanted to say uh.
[2024-07-09T16:43:34.766Z]	<Transcriber>	Dmitri_Zagidulin: Stephen and the rest of the team uh this is really excellent work and just for context to everybody else uh at about the same time I was also working on a similar spec uh that you use a slightly different history format uh but added uh very similar features but once uh once I found out about did DW I discarded my spec and I'm all in on this 1 and I wanted to um.
[2024-07-09T16:43:37.593Z]	<Manu_Sporny>	Oh man, love the "idenity" and "deceltiralized"
[2024-07-09T16:43:47.741Z]	<Kimberly_Wilson_Linson>	q?
[2024-07-09T16:43:48.260Z]	<Transcriber>	Dmitri_Zagidulin: About um the upgrade path from did web to did TDW uh but you've you've answered it uh with the also known as and and I think that's that's sufficient I think that's an easy way.
[2024-07-09T16:43:56.247Z]	<Transcriber>	Dmitri_Zagidulin: Uh for existing did webs to add the history log and the verifiability.
[2024-07-09T16:44:03.756Z]	<Transcriber>	Dmitri_Zagidulin: Um provided that the resolvers are smart enough to understand the additional richness so just wanted to say.
[2024-07-09T16:44:09.296Z]	<Transcriber>	Kimberly_Wilson_Linson: All right thank you uh Marcos.
[2024-07-09T16:44:28.785Z]	<Transcriber>	Markus_Sabadello: Um yes I also agree this is really a great work thanks for the presentation I I have a question about the slash who is feature um I I wonder how that relates to the linked verifiable presentations work which is also in the in the specification um maybe I can talk about it.
[2024-07-09T16:44:42.731Z]	<Transcriber>	Stephen_Curran: Yeah I've got I've got slides on that so I've got a few more slides these won't take long they're more introductory so people are aware of additional capabilities with this and so I'll hit on the did who is at that.
[2024-07-09T16:44:49.329Z]	<Transcriber>	Kimberly_Wilson_Linson: Okay great and uh Patrick.
[2024-07-09T16:45:22.412Z]	<Transcriber>	Patrick: Yeah just another quick question about the upgrade pad so let's say there's an organization they have a did web already they have use case and they need to preserve their did web is there a path forward for them to add up to W because I know the TDW uh introduced the concept of the skid which might not be present and existing did well so is there a way for an entity to preserve a did web that doesn't have a skid and tag on maybe a new TDW and create a link between these 2.
[2024-07-09T16:45:47.950Z]	<Transcriber>	Stephen_Curran: Well um we can definitely look at that um and that is the way you worded that is actually a really interesting way which is the transition from an existing um we can um we've thought about a few things with but always from that other perspective of starting with and publishing as it did web but what you're talking about is slightly different I like it and we'd have to think about it a bit.
[2024-07-09T16:46:05.888Z]	<Transcriber>	Patrick: Well maybe like could this kid become more something that happens outside of the did itself like when you have a TDW you get this kid in another way than having it hard-coded in the path it becomes something you fetch at a specific place or.
[2024-07-09T16:46:13.623Z]	<Transcriber>	Stephen_Curran: Um could be I don't know that's what I mean is that we haven't really gone through that but boy you should help us out with that.
[2024-07-09T16:46:17.541Z]	<Andrew_Whitehead>	The SCID must be in the DID itself to enforce the integrity
[2024-07-09T16:46:19.122Z]	<Transcriber>	Stephen_Curran: Okay let me get to a few more things.
[2024-07-09T16:46:24.499Z]	<Transcriber>	Stephen_Curran: And I see that that's the end of the.
[2024-07-09T16:46:29.851Z]	<Transcriber>	Kimberly_Wilson_Linson: Yeah go ahead.
[2024-07-09T16:47:26.694Z]	<Transcriber>	Stephen_Curran: The queue so um I'll get you a few more things yeah so um just it did so the whole thing we started with um was this thing is just a did um it can be used wherever it did can be used the content is completely unconstrained the only thing is it's got to have an ID in it which I'm pretty sure is the did chorus back requirement that it's got to have the ID in it um discoverable from the identifiers resolved from https um verifiable portable by changing the location of the did so the HTTP address the DNS you know server and path and subdomain whatever you want but retaining the skid and the log so portability is there so this idea um of of of of of being able to for instance be on Blue Sky for a while and then switch to another 1 but retain the same did so that.
[2024-07-09T16:47:49.607Z]	<Transcriber>	Stephen_Curran: Verify that it's truly the same person that was on blue sky before the same identity that was on blue sky before is now on some other 1 but they've changed their location um more secure and then did web and and arguably our premise more useful and agile than uh EXO x509 keys so just it did.
[2024-07-09T16:48:01.989Z]	<Transcriber>	Stephen_Curran: Man yeah isn't that classic I didn't even notice the identity decentralized on that picture until after I showed it to somebody else but yeah it's pretty brilliant.
[2024-07-09T16:48:21.815Z]	<Transcriber>	Stephen_Curran: Um challenges uh I did want to put off um we we have had a number of conversations with the log file getting large depending on the use case um we've done uh or Brian and Andrew have done testing of their implementations and it and it does um.
[2024-07-09T16:49:15.731Z]	<Transcriber>	Stephen_Curran: Fairly quickly um so we think that can be handled compression is good 70% compression on all the cases we've done so far with gzip and um there is a TTL parameter as a hint to the controller about how long they want to Cache um so that they can cache and then just continue on with the processing um you do have this trade-off with did web of a call home to retrieve the log but also the domain name giving the hint who controls it um portability I did say oh yeah that's awesome it can be portable and that is good because your reputation um done through the verification is there but if you move it without a redirect it gets a little tricky because um you have issues so we've got witnesses and Watchers um that are possible and I'll talk about those in a bit.
[2024-07-09T16:49:32.255Z]	<Rashmi_Siravara>	present+
[2024-07-09T16:49:55.129Z]	<Transcriber>	Stephen_Curran: And then the self asserted um nature of version time um so those are the challenges we see um and we think we're pretty happy with um with those um I mentioned this um how to publish in parallel with the did web so you can have a did TDW first and then publish a did Webb in parallel with it now um Patrick's question gave me thinking of how do we do the reverse how do we have it did web that does not have a skid in it and add it and that is tricky so we haven't thought enough about that yet um but that's that's um the type of question we want to get get out.
[2024-07-09T16:50:15.729Z]	<Transcriber>	Stephen_Curran: Um verifier beware you lose the verifiability and the provenance if you use just the did web and so we have we've had much internal discussion about promoting this capability we included in the spec is how to do it but we don't automatically do it as part of the um publishing.
[2024-07-09T16:50:30.091Z]	<kimhd>	I love this work. At the same time, I marvel that 2024 SSI we are working so hard to replicate things that were easy on blockchains (in 2016 SSI)
[2024-07-09T16:50:52.098Z]	<Manu_Sporny>	yes, agree ^ :)
[2024-07-09T16:51:13.135Z]	<Dmitri_Zagidulin>	@kimhd - ah yes, but WHICH blockchain :)
[2024-07-09T16:51:13.987Z]	<Manu_Sporny>	(but this work is necessary given "public opinion" on blockchains)
[2024-07-09T16:51:14.665Z]	<Transcriber>	Stephen_Curran: Um we had a number of debates about how to authorize and in fact the first version of authorized used did Doc keys keys within the did Doc um as the thing that had to authorize the update had to sign the data Integrity proof on the the versions um we got rid of that and put it into the parameters because it was just much cleaner to implement and and because there's not a clear um statement in the SPAC we didn't find about exactly what key what reference key should be used um for this type of authentication for controlling the update so we we didn't do that so the the did Doc Keys you could put the same um keys that you're using to control the uh to authorize the updates into the dock or you may keep them separate and use different ones um.
[2024-07-09T16:51:17.994Z]	<Transcriber>	Stephen_Curran: Is is kind of an interesting question.
[2024-07-09T16:51:39.288Z]	<Dmitri_Zagidulin>	one could argue that the 'controller''s assertionMethod keys are the ones who are authorized to update
[2024-07-09T16:51:46.686Z]	<Manu_Sporny>	agree ^
[2024-07-09T16:51:51.105Z]	<kimhd>	yes, people throwing out bebe with bathwater. Times will change
[2024-07-09T16:52:19.949Z]	<Transcriber>	Stephen_Curran: Um these are the rules I went over this earlier the first log I think I did first log entry must have an update keys in it and the proof on the first log entries must be signed by those update keys in all subsequent log entries they must be signed by the keys active from previous from the previous entries um so the second 1 would also be updated by the update keys but if you include a new if you rotate the update keys in the second 1 the third 1 would be would be signed by that and so on it gets confusing to talk about those things um update Keys is an array and all our authorized um blue sky has a a number of interesting things about how they use the multiple authorized keys to manage the did 1 use is to um restore uh ah ah d control over it did when the um the did owner actually loses their keys and so that's something that I.
[2024-07-09T16:52:20.724Z]	<Transcriber>	Stephen_Curran:  service might.
[2024-07-09T16:52:23.446Z]	<Transcriber>	Stephen_Curran: In in publishing them.
[2024-07-09T16:52:41.631Z]	<Jeff_O_-_HumanOS>	present+
[2024-07-09T16:52:45.230Z]	<Transcriber>	Stephen_Curran: Um did URL handling the pads and the who is so um obviously it's ideal to have did and path to file convert to http did to http and then path to file it's dead simple to do um ledgers it's much trickier and you have to think about different things with with.
[2024-07-09T16:53:04.211Z]	<Rashmi_Siravara>	present+
[2024-07-09T16:53:25.181Z]	<Transcriber>	Stephen_Curran: Based it it's dead simple so we wanted to get that in a way in we did it with service entries but we did it with implicit service entries so even if you did Doc doesn't include this the resolver should use um an explicit uh or a implicit service to resolve those um the files 1 uses the relative ref from the did core spec to set the location of files and the who is uses diffs linked to VP specification and let me talk a bit about that so the path to files is is is basically trivial um.
[2024-07-09T16:53:25.718Z]	<Transcriber>	Stephen_Curran:  we did.
[2024-07-09T16:53:41.630Z]	<Transcriber>	Stephen_Curran: We don't put the files in well known so if well known is there it gets dropped from the HTTP path but in other in all aspects you know the file is is relative to where the did jsonl where the the domain is.
[2024-07-09T16:53:52.537Z]	<Transcriber>	Stephen_Curran: Um all sorts of uses for that and um and and we're using it in a variety of ways of of what files can be there.
[2024-07-09T16:54:09.685Z]	<Transcriber>	Stephen_Curran: Um the slash who is I think is really cool um John came up with this so the slash who is returns a verifiable presentation with the did as the credential subject in all the embedded verifiable credentials so what does that mean.
[2024-07-09T16:54:13.686Z]	<Transcriber>	Stephen_Curran: Um you have a bunch of verifiable credentials.
[2024-07-09T16:54:29.226Z]	<Transcriber>	Stephen_Curran: That are issued with the data as the subject you put them in an array as the controller whichever ones you want to publish and then you sign that um using the did key um and publish it as a a verifiable presentation.
[2024-07-09T16:54:46.321Z]	<Manu_Sporny>	I've always dreamed of a '/whodis' mechanism... this is only off by one letter. :P
[2024-07-09T16:54:50.823Z]	<Transcriber>	Stephen_Curran: If I receive a VC do I trust the issuer all I need to do is find out the did of the issuer and then do a issue or did who is and I get a VP back and those VCS might be the legal entity might be a industry specific authorization might say oh I'm a member of a trust registry.
[2024-07-09T16:55:08.363Z]	<Transcriber>	Stephen_Curran: And then I can decide do I trust those issuers and it if I don't know who those issuers are I recursively do that and as a result I can do a series of HTTP requests and I can do an entire pass of do I trust the issue or or not.
[2024-07-09T16:55:15.820Z]	<Anil_John_[US/DHS/SVIP]>	I love this /whois feature! Of course John came up with it! :-)
[2024-07-09T16:55:29.490Z]	<Transcriber>	Stephen_Curran: And and eventually I could even pass that to a human to make the decision so I did a paper way back in 2018 and and this I'm I'm kind of always been trying to figure out how the heck you would do this traversal in in a trivial way and this is the first time I've seen it that that makes that really easy to do um this.
[2024-07-09T16:55:38.030Z]	<Transcriber>	Stephen_Curran: Um linked VP is the spec that enables that um and and we take advantage of it.
[2024-07-09T16:56:13.212Z]	<Transcriber>	Stephen_Curran: Um I've talked about portability before so basically you change the the the web location but you retain the skid and you retain the history and that allows a verifier to say oh you know oh you really did change from Gmail to Yahoo and and I can see that that old gmail um did you used to that used to be held by the the the Google service is now held by the Yahoo and it has the same province has the same history it truly is the same controller.
[2024-07-09T16:56:41.078Z]	<Anil_John_[US/DHS/SVIP]>	Glad to see that it plays well with HA DIDs w/ DNS!
[2024-07-09T16:56:41.764Z]	<Manu_Sporny>	+1 to HA DIDs w/ DNS!
[2024-07-09T16:56:49.123Z]	<kimhd>	+1 for rename to whodis because it's decentralized whois
[2024-07-09T16:57:05.681Z]	<Transcriber>	Stephen_Curran: Um a couple of advanced features that I'm running out of time but I really want to hit um hi asuransi did with DNS this there's a spec um that a number of of folks in the community have done um its goal is a 2-way linkage between did Webb dids and DNS and basically in the DNS you have entries that point to the did web and the key used to update it and entries in the did Webb did Doc um to the DNS uh that that is that it's bound to and so you basically get sort of a 2-factor authentication between DNS and DS this exact same approach applies to did TDW there's no reason um that these 2 do not work perfectly well together for that so I highlight that use and and there.
[2024-07-09T16:57:23.428Z]	<Transcriber>	Stephen_Curran: There's a bunch of features in the TDW that are inspired by Carrie and the work being done there um obviously they identifier the skid and the event log the self-certifying identifier all of those are are carry features the event log.
[2024-07-09T16:57:35.876Z]	<Transcriber>	Stephen_Curran: That's what key event um means in in Cary so those 3 things are there and I've covered those pretty um thoroughly but pre- rotation and Witnesses are also there.
[2024-07-09T16:57:38.785Z]	<Manu_Sporny>	^ lol -- yesss to "decentralized whois" -> "whodis" :)
[2024-07-09T16:57:40.837Z]	<Transcriber>	Stephen_Curran: Simply means committing to a key without exposing it.
[2024-07-09T16:57:44.630Z]	<kimhd>	s/Carrie/KERI
[2024-07-09T16:57:51.891Z]	<Transcriber>	Stephen_Curran: Um the reason this is a good idea is if an active key is compromised um did control can be lost if the.
[2024-07-09T16:57:53.782Z]	<kimhd>	s/Cary/KERI
[2024-07-09T16:58:01.444Z]	<Transcriber>	Stephen_Curran: Attacker that is compromised the key is able to rotate to a new key that they control and so the.
[2024-07-09T16:58:05.994Z]	<Transcriber>	Stephen_Curran: Original controller can lose can lose that um.
[2024-07-09T16:58:17.435Z]	<Dmitri_Zagidulin>	+1 to making pre-rotation a general DID Core 2.0 feature
[2024-07-09T16:58:27.982Z]	<Transcriber>	Stephen_Curran: In in there's quite a discussion about this in 1 of the issues but the idea is they would have to both lose control of the dead and the did serve or and the web server so they'd have to lose the key and the web server for this um but um it is possible and you want to prevent it so the idea is we have a a.
[2024-07-09T16:58:40.946Z]	<Manu_Sporny>	yes, agree w/ "lose key and server" being a pretty high bar for successful attack... might matter more when you change domains?
[2024-07-09T16:58:56.645Z]	<Transcriber>	Stephen_Curran: In a whenever we have uh we can use optional use um pre- rotation and every time you have update Keys you have next key hashes those are hashes of the um update keys and then to rotate you have to go to the pre you must use a pre- rotated key 1 that you've committed to in a prior version of the did Doc so this allows um.
[2024-07-09T16:59:21.525Z]	<Transcriber>	Stephen_Curran: Much safer use of uh of keys and control over those keys um suggested practical use is in the implementers guide this is only done for the updated keys and did and did TDW we think there should be a did core feature support pre- rotation of did do Keys um but we didn't Implement that and so that's not there.
[2024-07-09T16:59:24.973Z]	<Transcriber>	Stephen_Curran: Uh certainly a possibility but it's not there.
[2024-07-09T16:59:25.123Z]	<Transcriber>	Stephen_Curran:  and then.
[2024-07-09T16:59:31.889Z]	<Manu_Sporny>	Yeah, pre-rotation in DID Core seems to be gaining momentum for standardization in v2.0
[2024-07-09T16:59:42.535Z]	<Transcriber>	Stephen_Curran: The final feature is Carrie has um Concepts called um Witnesses Watchers judges juries and so on um Watchers are all external parties that monitor uh uh and identifiers and make sure that the owner doesn't do anything um.
[2024-07-09T17:00:00.231Z]	<Transcriber>	Stephen_Curran: Inappropriate with their did um so they're not malicious um that could be anybody so this is not included in the spec um but anyone can do it if they want to um because there is only 1 location where the did exists um.
[2024-07-09T17:00:02.210Z]	<Transcriber>	Stephen_Curran: But a witness is.
[2024-07-09T17:00:10.164Z]	<Markus_Sabadello>	+1 to figuring out which features could be standardized in a method-independent way, e.g. key pre-rotation, cache ttl, etc.
[2024-07-09T17:00:33.095Z]	<Manu_Sporny>	witnesses can be supported via the parallel signatures / chained signatures w/ Data Integrity.
[2024-07-09T17:00:48.588Z]	<Transcriber>	Stephen_Curran: Um actually a party that approves updates before publication and so we've got a mechanism included in the spec that defines how Witnesses which are um parties to the update of a did um carry out that and basically the idea is a controller constructs an entry passes it to a witness each witness would then both verify and approve um whatever approved means in the ecosystem um the the governance and then generate a date Integrity proof that would get appended to the data Integrity proof who would he add it to the array of data Integrity proofs on the log so that's the witness mechanism.
[2024-07-09T17:00:51.452Z]	<Bruno_Hivert_(he/him)_-_https://dtlab-labcn.org>	And witness can be automated
[2024-07-09T17:01:15.551Z]	<Transcriber>	Stephen_Curran: Um last slide sorry I've taken so long um we are starting to push uh and getting this into a working group and task force um love to have any help contact me if you're interested I'm especially interested in somebody that is spec the spec World Savvy because I am not I I like to build these things I just don't know how to um do a good job at at figuring out um.
[2024-07-09T17:01:47.979Z]	<Transcriber>	Stephen_Curran: How to get it through the step process so if anyone would be willing to help out with that I'd love to talk um bcgov hosts the specifications currently and a typescript implementation and a python implementation so all are there with these links um we are going to move it to incubation um originally talked about trust over IP although we're not 100% on that so possibly different w3c might be um good locations for that glad to get guidance from those in the community on that.
[2024-07-09T17:01:59.128Z]	<Transcriber>	Stephen_Curran: Apologies for taking so long and I saw Kim had to leave and so with that I'll stop sharing and turn it back over to the hosts if they're still here.
[2024-07-09T17:02:03.876Z]	<Harrison_Tang>	q?
[2024-07-09T17:02:05.567Z]	<Transcriber>	Harrison_Tang: Yes um any last questions from the audience.
[2024-07-09T17:02:10.820Z]	<Dmitri_Zagidulin>	q-
[2024-07-09T17:02:11.167Z]	<Transcriber>	Harrison_Tang: Money please yeah.
[2024-07-09T17:02:15.594Z]	<Harrison_Tang>	ack markus
[2024-07-09T17:02:27.312Z]	<Drummond_Reed>	present+
[2024-07-09T17:02:35.636Z]	<Transcriber>	Manu_Sporny: What would be the best sorry what what would be the best Forum to kind of coordinate on this Stephen like um would you like public mailing list or GitHub issues tend to kind of bury the conversation it feels like this is fantastic work and I think um it it it it needs to happen right and so what what's the best venue what would you prefer uh where would you prefer the discussion happen on kind of next steps.
[2024-07-09T17:02:55.640Z]	<PL/T3>	Sounds like a CCG WG ;-)
[2024-07-09T17:02:59.792Z]	<Transcriber>	Stephen_Curran: Uh I I would like to get it into a working group as soon as possible and I'm just trying to figure out where that working group would be and so I'll love to have guidance from anyone who knows the best place to do that given this is what we're trying to accomplish so um I am open to that and then immediately get into um regular conversations um.
[2024-07-09T17:03:05.221Z]	<Transcriber>	Stephen_Curran: To discuss and evolve get this input like I've heard today.
[2024-07-09T17:03:27.304Z]	<Transcriber>	Harrison_Tang: Any recommendations in regards to which group to join I saw in the comments ccg can be 1 of 1 of the groups so the so Stephen if you uh if you are interested maybe we can uh reconnect upline.
[2024-07-09T17:03:29.793Z]	<Andrew_Whitehead>	Most discussion is in the Github issues at the moment: https://github.com/bcgov/trustdidweb/issues
[2024-07-09T17:03:36.771Z]	<Transcriber>	Stephen_Curran: Yeah sorry about that.
[2024-07-09T17:03:40.195Z]	<Transcriber>	Harrison_Tang: All right any last questions I know we're a little bit over time but still a lot of people are online yeah no no worries great.
[2024-07-09T17:04:00.964Z]	<Transcriber>	Harrison_Tang: All right I don't see any other questions um so uh thank you thank you Stephen uh for actually a great presentation today it's very very well attended and a lot of great discussion so thanks a lot and then I will connect with you offline in regards to whether you would like to uh you know continue this discussion and work items in in the ccg context.
[2024-07-09T17:04:04.522Z]	<Transcriber>	Stephen_Curran: Excellent thank you so much.
[2024-07-09T17:04:09.703Z]	<Transcriber>	Harrison_Tang: Great this thanks a lot uh this concludes this week's cjd meeting thanks for attending.
